# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cxx}
widget_class SequenceGui {
  user_data 1 open
  xywh {1550 57 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button seq_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->Sequence_Bypass);
 return;
}
rkr->Sequence_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Sequence->cleanup();
rgui->findpos(37,(int)o->value(),o);}
    xywh {5 4 34 16} shortcut 0x36 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice seq_preset {
    label Preset
    user_data 12037
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12037))rkr->efx_Sequence->setpreset((int) o->value());
seq_WD->value(Dry_Wet(rkr->efx_Sequence->getpar(8)));
seq_q->value(rkr->efx_Sequence->getpar(10)-64);
seq_amp->value(rkr->efx_Sequence->getpar(11));
seq_tempo->value(rkr->efx_Sequence->getpar(9));
seq_stdf->value(rkr->efx_Sequence->getpar(12));
seq_1->value(rkr->efx_Sequence->getpar(0));
seq_2->value(rkr->efx_Sequence->getpar(1));
seq_3->value(rkr->efx_Sequence->getpar(2));
seq_4->value(rkr->efx_Sequence->getpar(3));
seq_5->value(rkr->efx_Sequence->getpar(4));
seq_6->value(rkr->efx_Sequence->getpar(5));
seq_7->value(rkr->efx_Sequence->getpar(6));
seq_8->value(rkr->efx_Sequence->getpar(7));
seq_mode->value(rkr->efx_Sequence->getpar(13));
seq_range->value(rkr->efx_Sequence->getpar(14));} open
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Jumpy
      xywh {82 82 36 21} labelsize 10
    }
    MenuItem {} {
      label {Stair Step}
      xywh {82 82 36 21} labelsize 10
    }
    MenuItem {} {
      label Mild
      xywh {82 82 36 21} labelsize 10
    }
    MenuItem {} {
      label {Wah Wah}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Filter Pan}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Stepper
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Shifter
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Zeke Trem}
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label Boogie
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Chorus
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Sequence 11} selected
      xywh {10 10 36 21} labelsize 10
    }
  }
  Fl_Value_Slider seq_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(314);
 return;
}
rkr->efx_Sequence->changepar(8,Dry_Wet((int)(o->value())));}
    xywh {53 25 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_1 {
    label 1
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(315);
 return;
}
rkr->efx_Sequence->changepar(0,(int)o->value());}
    xywh {53 37 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_2 {
    label 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(316);
 return;
}
rkr->efx_Sequence->changepar(1,(int)o->value());}
    xywh {53 49 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_3 {
    label 3
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(317);
 return;
}
rkr->efx_Sequence->changepar(2,(int)o->value());}
    xywh {53 61 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_4 {
    label 4
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(318);
 return;
}
rkr->efx_Sequence->changepar(3,(int)o->value());}
    xywh {53 73 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_5 {
    label 5
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(319);
 return;
}
rkr->efx_Sequence->changepar(4,(int)o->value());}
    xywh {53 85 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_6 {
    label 6
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(320);
 return;
}
rkr->efx_Sequence->changepar(5,(int)o->value());}
    xywh {53 97 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_7 {
    label 7
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(321);
 return;
}
rkr->efx_Sequence->changepar(6,(int)o->value());}
    xywh {53 109 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_8 {
    label 8
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(322);
 return;
}
rkr->efx_Sequence->changepar(7,(int)o->value());}
    xywh {53 121 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_tempo {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(323);
 return;
}
rkr->efx_Sequence->changepar(9,(int)o->value());}
    xywh {53 133 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 600 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_q {
    label Q
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(324);
 return;
}
rkr->efx_Sequence->changepar(10,(int)o->value()+64);}
    tooltip {Filter Resonance} xywh {53 145 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider seq_stdf {
    label {Stereo Df}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(325);
 return;
}
rkr->efx_Sequence->changepar(12,(int)o->value());}
    tooltip {Right Channel Step Lag} xywh {53 157 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 9 labelcolor 7 align 4 maximum 7 step 1 textcolor 7
    class SliderW
  }
  Fl_Check_Button seq_amp {
    label {Amp.}
    user_data 2
    callback {rkr->efx_Sequence->changepar(11,(int)o->value())}
    tooltip {Amplitude/Alt. Mode} xywh {113 169 43 14} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Choice seq_mode {
    label Mode
    user_data 12
    callback {rkr->efx_Sequence->changepar(13,(int)o->value())}
    tooltip {Modulation Mode} xywh {33 169 78 13} down_box BORDER_BOX labelsize 9 labelcolor 7 textsize 9 textcolor 7
  } {
    MenuItem {} {
      label Lineal
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label UpDown
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label Stepper
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label Shifter
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label Tremor
      xywh {10 10 36 21} labelsize 9
    }
    MenuItem {} {
      label Arpegiator
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label Chorus
      xywh {0 0 36 21} labelsize 9
    }
    MenuItem {} {
      label TrigStepper
      xywh {10 10 36 21} labelsize 9
    }
    MenuItem {} {
      label {Seq Delay}
      xywh {20 20 36 21} labelsize 9
    }
  }
  Fl_Counter seq_range {
    label Range
    callback {rkr->efx_Sequence->changepar(14,(int)o->value())}
    tooltip {Step Adjustment Range} xywh {5 73 33 13} type Simple labelsize 10 labelcolor 7 minimum 1 maximum 8 step 1 value 1 textsize 9
  }
}
