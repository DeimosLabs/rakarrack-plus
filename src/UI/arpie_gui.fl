# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

decl {\#include "RKR_Choice.h"} {public global
}

decl {\#include "RKR_Counter.h"} {public global
}

widget_class {\#include "common_gui_menu.h"} ArpieGui {
  user_data 1 open
  xywh {1550 57 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "RKR_Slider.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"}
  code3 {\#include "common_gui_menu.h"} visible position_relative
} {
  Fl_Light_Button arpie_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Multi_On_Off);
 o->value(rkr->Arpie_Bypass);
 return;
}
rkr->Arpie_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Arpie->cleanup();
rgui->findpos(EFX_ARPIE,(int)o->value(),o);} selected
    xywh {5 4 34 18} shortcut 0x35 color 62 selection_color 1 labelsize 10 align 84 when 1
    class RKR_Light_Button
  }
  Fl_Choice arpie_preset {
    label Preset
    user_data 12024
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12024))rkr->efx_Arpie->setpreset((int) o->value());
arpie_WD->value(Dry_Wet(rkr->efx_Arpie->getpar(Arpie_DryWet)));
arpie_pan->value(rkr->efx_Arpie->getpar(Arpie_Pan)-64);
arpie_delay->value(rkr->efx_Arpie->getpar(Arpie_Tempo));
arpie_LRdl->value(rkr->efx_Arpie->getpar(Arpie_LR_Delay));
arpie_LRc->value(rkr->efx_Arpie->getpar(Arpie_LR_Cross));
arpie_fb->value(rkr->efx_Arpie->getpar(Arpie_Feedback));
arpie_damp->value(rkr->efx_Arpie->getpar(Arpie_Damp));
arpie_arpe->value(rkr->efx_Arpie->getpar(Arpie_ArpeWD));
arpie_harm->value(rkr->efx_Arpie->getpar(Arpie_Harm));
arpie_pattern->value(rkr->efx_Arpie->getpar(Arpie_Pattern));
arpie_subdiv->value(rkr->efx_Arpie->getpar(Arpie_Subdivision));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label Tremolo
      xywh {77 77 36 21} labelsize 10
    }
    MenuItem {} {
      label {Arpie 1}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Arpie 2}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Arpie 3}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Simple Arpie}
      xywh {77 77 36 21} labelsize 10
    }
    MenuItem {} {
      label Canyon
      xywh {87 87 36 21} labelsize 10
    }
    MenuItem {} {
      label {Panning Arpie 1}
      xywh {107 107 36 21} labelsize 10
    }
    MenuItem {} {
      label {Panning Arpie 2}
      xywh {117 117 36 21} labelsize 10
    }
    MenuItem {} {
      label {Panning Arpie 3}
      xywh {127 127 36 21} labelsize 10
    }
    MenuItem {} {
      label {Feedback Arpie}
      xywh {137 137 36 21} labelsize 10
    }
  }
  Fl_Value_Slider arpie_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_DryWet);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_DryWet,Dry_Wet((int)(o->value())));}
    xywh {56 28 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_arpe {
    label {Arpe's}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_ArpeWD);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_ArpeWD,(int)o->value());}
    xywh {56 42 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_pan {
    label Pan
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_Pan);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_Pan,(int)(o->value()+64));}
    xywh {56 56 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_delay {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_Tempo);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_Tempo,(int)o->value());}
    xywh {56 70 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 minimum 1 maximum 600 step 1 value 1 textcolor 7
    class RKR_Slider
  }
  Fl_Choice arpie_subdiv {
    label SubDivision
    user_data 12
    callback {rkr->efx_Arpie->changepar(Arpie_Subdivision,(int)o->value());} open
    xywh {78 82 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    code0 {o->menu(m_subdiv_menu->get_subdiv_type());}
    class RKR_Choice
  } {}
  Fl_Value_Slider arpie_LRdl {
    label {L/R Delay}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_LR_Delay);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_LR_Delay,(int)o->value());}
    xywh {56 103 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_LRc {
    label {L/R Cross}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_LR_Cross);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_LR_Cross,(int)(o->value()));}
    xywh {56 118 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_fb {
    label Feedback
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_Feedback);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_Feedback,(int)o->value());}
    xywh {56 133 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider arpie_damp {
    label Damp
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Arpie_Damp);
 return;
} 
rkr->efx_Arpie->changepar(Arpie_Damp,(int)o->value());}
    xywh {56 167 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Counter arpie_harm {
    label H
    callback {rkr->efx_Arpie->changepar(Arpie_Harm,(int)o->value());}
    tooltip {Number of steps in the pattern} xywh {20 150 52 12} type Simple box THIN_UP_BOX labelsize 10 labelcolor 7 align 4 minimum 1 maximum 8 step 1 value 1 textsize 9
    code0 {o->set_text_offset(-1);}
    class RKR_Counter
  }
  Fl_Choice arpie_pattern {
    user_data 12
    callback {rkr->efx_Arpie->changepar(Arpie_Pattern,(int)o->value());}
    xywh {77 147 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label Ascending
      xywh {77 77 36 21} labelsize 10
    }
    MenuItem {} {
      label Descending
      xywh {77 77 36 21} labelsize 10
    }
    MenuItem {} {
      label UpDown
      xywh {77 77 36 21} labelsize 10
    }
    MenuItem {} {
      label Stutter
      xywh {87 87 36 21} labelsize 10
    }
    MenuItem {} {
      label {Interrupted Descent}
      xywh {97 97 36 21} labelsize 10
    }
    MenuItem {} {
      label {Double Descend }
      xywh {117 117 36 21} labelsize 10
    }
  }
  decl {CommonGuiMenu *m_subdiv_menu;} {private local
  }
}
