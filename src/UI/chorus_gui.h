// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef chorus_gui_h
#define chorus_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include "sliderW.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Check_Button.H>

class ChorusGui : public Fl_Group {
public:
  ChorusGui(int X, int Y, int W, int H, const char *L = 0);
  Fl_Light_Button *chorus_activar;
private:
  inline void cb_chorus_activar_i(Fl_Light_Button*, void*);
  static void cb_chorus_activar(Fl_Light_Button*, void*);
public:
  Fl_Choice *chorus_preset;
private:
  inline void cb_chorus_preset_i(Fl_Choice*, void*);
  static void cb_chorus_preset(Fl_Choice*, void*);
  static Fl_Menu_Item menu_chorus_preset[];
public:
  SliderW *chorus_WD;
private:
  inline void cb_chorus_WD_i(SliderW*, void*);
  static void cb_chorus_WD(SliderW*, void*);
public:
  SliderW *chorus_pan;
private:
  inline void cb_chorus_pan_i(SliderW*, void*);
  static void cb_chorus_pan(SliderW*, void*);
public:
  SliderW *chorus_freq;
private:
  inline void cb_chorus_freq_i(SliderW*, void*);
  static void cb_chorus_freq(SliderW*, void*);
public:
  SliderW *chorus_rnd;
private:
  inline void cb_chorus_rnd_i(SliderW*, void*);
  static void cb_chorus_rnd(SliderW*, void*);
public:
  Fl_Choice *chorus_lfotype;
private:
  inline void cb_chorus_lfotype_i(Fl_Choice*, void*);
  static void cb_chorus_lfotype(Fl_Choice*, void*);
public:
  Fl_Check_Button *chorus_subs;
private:
  inline void cb_chorus_subs_i(Fl_Check_Button*, void*);
  static void cb_chorus_subs(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *chorus_awesome;
private:
  inline void cb_chorus_awesome_i(Fl_Check_Button*, void*);
  static void cb_chorus_awesome(Fl_Check_Button*, void*);
public:
  SliderW *chorus_stdf;
private:
  inline void cb_chorus_stdf_i(SliderW*, void*);
  static void cb_chorus_stdf(SliderW*, void*);
public:
  SliderW *chorus_dpth;
private:
  inline void cb_chorus_dpth_i(SliderW*, void*);
  static void cb_chorus_dpth(SliderW*, void*);
public:
  SliderW *chorus_delay;
private:
  inline void cb_chorus_delay_i(SliderW*, void*);
  static void cb_chorus_delay(SliderW*, void*);
public:
  SliderW *chorus_fb;
private:
  inline void cb_chorus_fb_i(SliderW*, void*);
  static void cb_chorus_fb(SliderW*, void*);
public:
  SliderW *chorus_LR;
private:
  inline void cb_chorus_LR_i(SliderW*, void*);
  static void cb_chorus_LR(SliderW*, void*);
  CommonGuiMenu *m_lfo_menu; 
};
#endif
