// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef chorus_gui_h
#define chorus_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include "RKR_Choice.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class ChorusGui : public RKR_Gui_Effect {
public:
  ChorusGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *chorus_activar;
private:
  inline void cb_chorus_activar_i(RKR_Light_Button*, void*);
  static void cb_chorus_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *chorus_preset;
private:
  inline void cb_chorus_preset_i(RKR_Choice*, void*);
  static void cb_chorus_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_chorus_preset[];
public:
  RKR_Slider *chorus_WD;
private:
  inline void cb_chorus_WD_i(RKR_Slider*, void*);
  static void cb_chorus_WD(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_pan;
private:
  inline void cb_chorus_pan_i(RKR_Slider*, void*);
  static void cb_chorus_pan(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_freq;
private:
  inline void cb_chorus_freq_i(RKR_Slider*, void*);
  static void cb_chorus_freq(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_rnd;
private:
  inline void cb_chorus_rnd_i(RKR_Slider*, void*);
  static void cb_chorus_rnd(RKR_Slider*, void*);
public:
  RKR_Choice *chorus_lfotype;
private:
  inline void cb_chorus_lfotype_i(RKR_Choice*, void*);
  static void cb_chorus_lfotype(RKR_Choice*, void*);
public:
  RKR_Check_Button *chorus_subs;
private:
  inline void cb_chorus_subs_i(RKR_Check_Button*, void*);
  static void cb_chorus_subs(RKR_Check_Button*, void*);
public:
  RKR_Check_Button *chorus_awesome;
private:
  inline void cb_chorus_awesome_i(RKR_Check_Button*, void*);
  static void cb_chorus_awesome(RKR_Check_Button*, void*);
public:
  RKR_Slider *chorus_stdf;
private:
  inline void cb_chorus_stdf_i(RKR_Slider*, void*);
  static void cb_chorus_stdf(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_dpth;
private:
  inline void cb_chorus_dpth_i(RKR_Slider*, void*);
  static void cb_chorus_dpth(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_delay;
private:
  inline void cb_chorus_delay_i(RKR_Slider*, void*);
  static void cb_chorus_delay(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_fb;
private:
  inline void cb_chorus_fb_i(RKR_Slider*, void*);
  static void cb_chorus_fb(RKR_Slider*, void*);
public:
  RKR_Slider *chorus_LR;
private:
  inline void cb_chorus_LR_i(RKR_Slider*, void*);
  static void cb_chorus_LR(RKR_Slider*, void*);
  CommonGuiMenu *m_lfo_menu; 
};
#endif
