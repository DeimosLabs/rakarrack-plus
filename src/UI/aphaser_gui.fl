# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

decl {\#include "RKR_Check_Button.h"} {public global
}

decl {\#include "RKR_Choice.h"} {public global
}

decl {\#include "RKR_Counter.h"} {public global
}

widget_class {\#include "common_gui_menu.h"} AphaserGui {
  user_data 1 open
  xywh {1550 57 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "RKR_Slider.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"}
  code3 {\#include "common_gui_menu.h"} visible position_relative
} {
  Fl_Light_Button aphaser_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->APhaser_Bypass);
 return;
}
rkr->APhaser_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_APhaser->cleanup();
rgui->findpos(18,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x37 color 62 selection_color 1 labelsize 10 align 84 when 1
    class RKR_Light_Button
  }
  Fl_Choice aphaser_preset {
    label Preset
    user_data 12018
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12018))rkr->efx_APhaser->setpreset((int) o->value());
aphaser_WD->value(Dry_Wet(rkr->efx_APhaser->getpar(0)));
aphaser_distort->value(rkr->efx_APhaser->getpar(1));
aphaser_freq->value(rkr->efx_APhaser->getpar(2));
aphaser_rnd->value(rkr->efx_APhaser->getpar(3));
aphaser_lfotype->value(rkr->efx_APhaser->getpar(4));
aphaser_stdf->value(rkr->efx_APhaser->getpar(5));
aphaser_width->value(rkr->efx_APhaser->getpar(6));
aphaser_stages->value(rkr->efx_APhaser->getpar(8));
aphaser_fb->value(rkr->efx_APhaser->getpar(7)-64);
aphaser_mismatch->value(rkr->efx_APhaser->getpar(9));
aphaser_subs->value(rkr->efx_APhaser->getpar(10));
aphaser_phase->value(rkr->efx_APhaser->getpar(11));
aphaser_hyper->value(rkr->efx_APhaser->getpar(12));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label {Phaser 1}
      xywh {72 72 36 21} labelsize 10
    }
    MenuItem {} {
      label {Phaser 2}
      xywh {72 72 36 21} labelsize 10
    }
    MenuItem {} {
      label {Phaser 3}
      xywh {72 72 36 21} labelsize 10
    }
    MenuItem {} {
      label {Phaser 4}
      xywh {82 82 36 21} labelsize 10
    }
    MenuItem {} {
      label {Phaser 5}
      xywh {92 92 36 21} labelsize 10
    }
    MenuItem {} {
      label {Phaser 6}
      xywh {102 102 36 21} labelsize 10
    }
  }
  Fl_Value_Slider aphaser_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(117);
 return;
} 
rkr->efx_APhaser->changepar(APhase_DryWet,Dry_Wet((int)(o->value())));}
    xywh {56 25 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_distort {
    label Distort
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(118);
 return;
} 
rkr->efx_APhaser->changepar(APhase_Distortion,(int)o->value());}
    xywh {56 115 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_freq {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(119);
 return;
} 
rkr->efx_APhaser->changepar(APhase_LFOFreq,(int)o->value());}
    xywh {56 56 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 600 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_rnd {
    label Random
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(404);
 return;
} 
rkr->efx_APhaser->changepar(APhase_LFORand,(int)o->value());}
    xywh {56 127 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Choice aphaser_lfotype {
    label {LFO Type}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(457);
 return;
} 

rkr->efx_APhaser->changepar(APhase_LFOType,(int)o->value());} open
    xywh {78 37 72 16} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 textsize 10 textcolor 7
    code0 {o->menu(m_lfo_menu->get_lfo_type());}
    class RKR_Choice
  } {}
  Fl_Value_Slider aphaser_width {
    label Width
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(121);
 return;
} 
rkr->efx_APhaser->changepar(APhase_Width,(int)o->value());}
    xywh {56 79 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_phase {
    label {P. Depth}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(120);
 return;
} 
rkr->efx_APhaser->changepar(APhase_Depth,(int)o->value());}
    tooltip {Phase Depth} xywh {56 67 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_fb {
    label Feedback
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(122);
 return;
} 
rkr->efx_APhaser->changepar(APhase_Feedback,(int)(o->value()+64));}
    xywh {56 91 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_mismatch {
    label Mismatch
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(123);
 return;
} 
rkr->efx_APhaser->changepar(APhase_Mismatch,(int)o->value());}
    xywh {56 103 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider aphaser_stdf {
    label {Stereo Df}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(124);
 return;
} 
rkr->efx_APhaser->changepar(APhase_LFOStereo,(int)o->value());}
    tooltip {LFO L/R Delay} xywh {56 138 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Counter aphaser_stages {
    label Stages
    callback {rkr->efx_APhaser->changepar(APhase_Stages,(int)o->value());}
    xywh {80 151 52 12} type Simple box THIN_UP_BOX labelsize 10 labelcolor 7 align 4 minimum 1 maximum 12 step 1 value 1 textsize 9
    code0 {o->set_text_offset(-1);}
    class RKR_Counter
  }
  Fl_Check_Button aphaser_subs {
    label Subtract
    user_data 2
    callback {rkr->efx_APhaser->changepar(APhase_Subtract,(int)o->value())}
    xywh {18 165 64 15} down_box BORDER_BOX labelsize 10 labelcolor 7
    class RKR_Check_Button
  }
  Fl_Check_Button aphaser_hyper {
    label Hyper
    user_data 2
    callback {rkr->efx_APhaser->changepar(APhase_Hyper,(int)o->value())} selected
    xywh {90 165 53 15} down_box BORDER_BOX labelsize 10 labelcolor 7
    class RKR_Check_Button
  }
  decl {CommonGuiMenu *m_lfo_menu;} {private local
  }
}
