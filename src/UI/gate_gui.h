// generated by Fast Light User Interface Designer (fluid) version 1.0305

#ifndef gate_gui_h
#define gate_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Choice.h"
#include <FL/Fl_Group.H>
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"

class GateGui : public Fl_Group {
public:
  GateGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *gate_activar;
private:
  inline void cb_gate_activar_i(RKR_Light_Button*, void*);
  static void cb_gate_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *gate_preset;
private:
  inline void cb_gate_preset_i(RKR_Choice*, void*);
  static void cb_gate_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_gate_preset[];
public:
  RKR_Slider *gate_ATime;
private:
  inline void cb_gate_ATime_i(RKR_Slider*, void*);
  static void cb_gate_ATime(RKR_Slider*, void*);
public:
  RKR_Slider *gate_RTime;
private:
  inline void cb_gate_RTime_i(RKR_Slider*, void*);
  static void cb_gate_RTime(RKR_Slider*, void*);
public:
  RKR_Slider *gate_range;
private:
  inline void cb_gate_range_i(RKR_Slider*, void*);
  static void cb_gate_range(RKR_Slider*, void*);
public:
  RKR_Slider *gate_threshold;
private:
  inline void cb_gate_threshold_i(RKR_Slider*, void*);
  static void cb_gate_threshold(RKR_Slider*, void*);
public:
  RKR_Slider *gate_hold;
private:
  inline void cb_gate_hold_i(RKR_Slider*, void*);
  static void cb_gate_hold(RKR_Slider*, void*);
public:
  RKR_Slider *gate_LPF;
private:
  inline void cb_gate_LPF_i(RKR_Slider*, void*);
  static void cb_gate_LPF(RKR_Slider*, void*);
public:
  RKR_Slider *gate_HPF;
private:
  inline void cb_gate_HPF_i(RKR_Slider*, void*);
  static void cb_gate_HPF(RKR_Slider*, void*);
};
#endif
