// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef dist_gui_h
#define dist_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include "sliderW.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Check_Button.H>

class DistGui : public Fl_Group {
public:
  DistGui(int X, int Y, int W, int H, const char *L = 0);
  Fl_Light_Button *dist_activar;
private:
  inline void cb_dist_activar_i(Fl_Light_Button*, void*);
  static void cb_dist_activar(Fl_Light_Button*, void*);
public:
  Fl_Choice *dist_preset;
private:
  inline void cb_dist_preset_i(Fl_Choice*, void*);
  static void cb_dist_preset(Fl_Choice*, void*);
  static Fl_Menu_Item menu_dist_preset[];
public:
  SliderW *dist_WD;
private:
  inline void cb_dist_WD_i(SliderW*, void*);
  static void cb_dist_WD(SliderW*, void*);
public:
  SliderW *dist_LRc;
private:
  inline void cb_dist_LRc_i(SliderW*, void*);
  static void cb_dist_LRc(SliderW*, void*);
public:
  SliderW *dist_drive;
private:
  inline void cb_dist_drive_i(SliderW*, void*);
  static void cb_dist_drive(SliderW*, void*);
public:
  SliderW *dist_level;
private:
  inline void cb_dist_level_i(SliderW*, void*);
  static void cb_dist_level(SliderW*, void*);
public:
  Fl_Choice *dist_tipo;
private:
  inline void cb_dist_tipo_i(Fl_Choice*, void*);
  static void cb_dist_tipo(Fl_Choice*, void*);
public:
  Fl_Check_Button *dist_neg;
private:
  inline void cb_dist_neg_i(Fl_Check_Button*, void*);
  static void cb_dist_neg(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *dist_pf;
private:
  inline void cb_dist_pf_i(Fl_Check_Button*, void*);
  static void cb_dist_pf(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *dist_st;
private:
  inline void cb_dist_st_i(Fl_Check_Button*, void*);
  static void cb_dist_st(Fl_Check_Button*, void*);
public:
  SliderW *dist_pan;
private:
  inline void cb_dist_pan_i(SliderW*, void*);
  static void cb_dist_pan(SliderW*, void*);
public:
  SliderW *dist_oct;
private:
  inline void cb_dist_oct_i(SliderW*, void*);
  static void cb_dist_oct(SliderW*, void*);
public:
  SliderW *dist_lpf;
private:
  inline void cb_dist_lpf_i(SliderW*, void*);
  static void cb_dist_lpf(SliderW*, void*);
public:
  SliderW *dist_hpf;
private:
  inline void cb_dist_hpf_i(SliderW*, void*);
  static void cb_dist_hpf(SliderW*, void*);
  CommonGuiMenu *m_dist_menu; 
};
#endif
