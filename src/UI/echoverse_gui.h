// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef echoverse_gui_h
#define echoverse_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Choice.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class EchoverseGui : public RKR_Gui_Effect {
public:
  EchoverseGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *echoverse_activar;
private:
  inline void cb_echoverse_activar_i(RKR_Light_Button*, void*);
  static void cb_echoverse_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *echoverse_preset;
private:
  inline void cb_echoverse_preset_i(RKR_Choice*, void*);
  static void cb_echoverse_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_echoverse_preset[];
public:
  RKR_Slider *echoverse_WD;
private:
  inline void cb_echoverse_WD_i(RKR_Slider*, void*);
  static void cb_echoverse_WD(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_RV;
private:
  inline void cb_echoverse_RV_i(RKR_Slider*, void*);
  static void cb_echoverse_RV(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_pan;
private:
  inline void cb_echoverse_pan_i(RKR_Slider*, void*);
  static void cb_echoverse_pan(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_delay;
private:
  inline void cb_echoverse_delay_i(RKR_Slider*, void*);
  static void cb_echoverse_delay(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_LRdl;
private:
  inline void cb_echoverse_LRdl_i(RKR_Slider*, void*);
  static void cb_echoverse_LRdl(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_fb;
private:
  inline void cb_echoverse_fb_i(RKR_Slider*, void*);
  static void cb_echoverse_fb(RKR_Slider*, void*);
public:
  RKR_Choice *echoverse_subdiv;
private:
  inline void cb_echoverse_subdiv_i(RKR_Choice*, void*);
  static void cb_echoverse_subdiv(RKR_Choice*, void*);
public:
  RKR_Slider *echoverse_damp;
private:
  inline void cb_echoverse_damp_i(RKR_Slider*, void*);
  static void cb_echoverse_damp(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_es;
private:
  inline void cb_echoverse_es_i(RKR_Slider*, void*);
  static void cb_echoverse_es(RKR_Slider*, void*);
public:
  RKR_Slider *echoverse_angle;
private:
  inline void cb_echoverse_angle_i(RKR_Slider*, void*);
  static void cb_echoverse_angle(RKR_Slider*, void*);
  CommonGuiMenu *m_subdiv_menu; 
public:
  void parameter_refresh(int index);
  void tap_tempo_update();
};
#endif
