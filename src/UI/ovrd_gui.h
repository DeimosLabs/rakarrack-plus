// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef ovrd_gui_h
#define ovrd_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include "RKR_Choice.h"
#include <FL/Fl_Group.H>
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class OvrdGui : public Fl_Group {
public:
  OvrdGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *ovrd_activar;
private:
  inline void cb_ovrd_activar_i(RKR_Light_Button*, void*);
  static void cb_ovrd_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *ovrd_preset;
private:
  inline void cb_ovrd_preset_i(RKR_Choice*, void*);
  static void cb_ovrd_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_ovrd_preset[];
public:
  RKR_Slider *ovrd_WD;
private:
  inline void cb_ovrd_WD_i(RKR_Slider*, void*);
  static void cb_ovrd_WD(RKR_Slider*, void*);
public:
  RKR_Slider *ovrd_LRc;
private:
  inline void cb_ovrd_LRc_i(RKR_Slider*, void*);
  static void cb_ovrd_LRc(RKR_Slider*, void*);
public:
  RKR_Slider *ovrd_drive;
private:
  inline void cb_ovrd_drive_i(RKR_Slider*, void*);
  static void cb_ovrd_drive(RKR_Slider*, void*);
public:
  RKR_Slider *ovrd_level;
private:
  inline void cb_ovrd_level_i(RKR_Slider*, void*);
  static void cb_ovrd_level(RKR_Slider*, void*);
public:
  RKR_Choice *ovrd_tipo;
private:
  inline void cb_ovrd_tipo_i(RKR_Choice*, void*);
  static void cb_ovrd_tipo(RKR_Choice*, void*);
public:
  RKR_Check_Button *ovrd_neg;
private:
  inline void cb_ovrd_neg_i(RKR_Check_Button*, void*);
  static void cb_ovrd_neg(RKR_Check_Button*, void*);
public:
  RKR_Check_Button *ovrd_st;
private:
  inline void cb_ovrd_st_i(RKR_Check_Button*, void*);
  static void cb_ovrd_st(RKR_Check_Button*, void*);
public:
  RKR_Slider *ovrd_pan;
private:
  inline void cb_ovrd_pan_i(RKR_Slider*, void*);
  static void cb_ovrd_pan(RKR_Slider*, void*);
public:
  RKR_Check_Button *ovrd_pf;
private:
  inline void cb_ovrd_pf_i(RKR_Check_Button*, void*);
  static void cb_ovrd_pf(RKR_Check_Button*, void*);
public:
  RKR_Slider *ovrd_lpf;
private:
  inline void cb_ovrd_lpf_i(RKR_Slider*, void*);
  static void cb_ovrd_lpf(RKR_Slider*, void*);
public:
  RKR_Slider *ovrd_hpf;
private:
  inline void cb_ovrd_hpf_i(RKR_Slider*, void*);
  static void cb_ovrd_hpf(RKR_Slider*, void*);
  CommonGuiMenu *m_dist_menu; 
};
#endif
