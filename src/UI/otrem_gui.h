// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef otrem_gui_h
#define otrem_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include <FL/Fl_Group.H>
#include "sliderW.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"
#include <FL/Fl_Choice.H>

class OtremGui : public Fl_Group {
public:
  OtremGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *otrem_activar;
private:
  inline void cb_otrem_activar_i(RKR_Light_Button*, void*);
  static void cb_otrem_activar(RKR_Light_Button*, void*);
public:
  Fl_Choice *otrem_preset;
private:
  inline void cb_otrem_preset_i(Fl_Choice*, void*);
  static void cb_otrem_preset(Fl_Choice*, void*);
  static Fl_Menu_Item menu_otrem_preset[];
public:
  SliderW *otrem_dpth;
private:
  inline void cb_otrem_dpth_i(SliderW*, void*);
  static void cb_otrem_dpth(SliderW*, void*);
public:
  SliderW *otrem_freq;
private:
  inline void cb_otrem_freq_i(SliderW*, void*);
  static void cb_otrem_freq(SliderW*, void*);
public:
  SliderW *otrem_rnd;
private:
  inline void cb_otrem_rnd_i(SliderW*, void*);
  static void cb_otrem_rnd(SliderW*, void*);
public:
  Fl_Choice *otrem_lfotype;
private:
  inline void cb_otrem_lfotype_i(Fl_Choice*, void*);
  static void cb_otrem_lfotype(Fl_Choice*, void*);
public:
  SliderW *otrem_stdf;
private:
  inline void cb_otrem_stdf_i(SliderW*, void*);
  static void cb_otrem_stdf(SliderW*, void*);
public:
  SliderW *otrem_pan;
private:
  inline void cb_otrem_pan_i(SliderW*, void*);
  static void cb_otrem_pan(SliderW*, void*);
public:
  RKR_Check_Button *otrem_invert;
private:
  inline void cb_otrem_invert_i(RKR_Check_Button*, void*);
  static void cb_otrem_invert(RKR_Check_Button*, void*);
  CommonGuiMenu *m_lfo_menu; 
};
#endif
