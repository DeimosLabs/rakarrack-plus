# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
widget_class InfinityGui {
  user_data 1 open
  xywh {1550 56 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button infinity_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116); 
 o->value(rkr->Infinity_Bypass);
 return;
} 
rkr->Infinity_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Infinity->cleanup();
rgui->findpos(46,(int)o->value(),o);}
    xywh {8 5 34 18} shortcut 0x31 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice infinity_preset {
    label Preset
    user_data 12046
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12046))rkr->efx_Infinity->setpreset((int) o->value());
infinity_WD->value(Dry_Wet(rkr->efx_Infinity->getpar(0)));
infinity_Q->value(rkr->efx_Infinity->getpar(9));
infinity_1->value(rkr->efx_Infinity->getpar(1));
infinity_2->value(rkr->efx_Infinity->getpar(2));
infinity_3->value(rkr->efx_Infinity->getpar(3));
infinity_4->value(rkr->efx_Infinity->getpar(4));
infinity_5->value(rkr->efx_Infinity->getpar(5));
infinity_6->value(rkr->efx_Infinity->getpar(6));
infinity_7->value(rkr->efx_Infinity->getpar(7));
infinity_8->value(rkr->efx_Infinity->getpar(8));
infinity_start->value(rkr->efx_Infinity->getpar(10));
infinity_end->value(rkr->efx_Infinity->getpar(11));
infinity_rate->value(rkr->efx_Infinity->getpar(12));
infinity_stdf->value(rkr->efx_Infinity->getpar(13));
infinity_subdiv->value(rkr->efx_Infinity->getpar(14));
infinity_pan->value(rkr->efx_Infinity->getpar(15));
infinity_rev->value(rkr->efx_Infinity->getpar(16));
infinity_stages->value(rkr->efx_Infinity->getpar(17));}
    xywh {80 5 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Plain
      xywh {37 37 36 21} labelsize 10
    }
    MenuItem {} {
      label Basic
      xywh {27 27 36 21} labelsize 10
    }
    MenuItem {} {
      label {Rising Comb}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Falling Comb}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Laser
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Doppler
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label Detune
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label {Dizzy Sailor}
      xywh {30 30 36 21} labelsize 10
    }
    MenuItem {} {
      label {Stereo Phaser}
      xywh {40 40 36 21} labelsize 10
    }
    MenuItem {} {
      label Corkscrew
      xywh {50 50 36 21} labelsize 10
    }
    MenuItem {} {
      label FreqeeVox
      xywh {60 60 36 21} labelsize 10
    }
  }
  Fl_Value_Slider infinity_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(395);
 return;
} 
rkr->efx_Infinity->changepar(0,Dry_Wet((int)(o->value())));}
    xywh {53 27 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_Q {
    label Res
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(396);
 return;
}
rkr->efx_Infinity->changepar(9,(int)o->value());}
    tooltip {Resonance Filter} xywh {53 41 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -1000 maximum 1000 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Input infinity_1 {
    label 1
    callback {rkr->efx_Infinity->changepar(1,(int)o->value());}
    xywh {19 56 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_2 {
    label 2
    callback {rkr->efx_Infinity->changepar(2,(int)o->value());}
    xywh {55 56 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_3 {
    label 3
    callback {rkr->efx_Infinity->changepar(3,(int)o->value());}
    xywh {91 56 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_4 {
    label 4
    callback {rkr->efx_Infinity->changepar(4,(int)o->value());}
    xywh {130 56 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_5 {
    label 5
    callback {rkr->efx_Infinity->changepar(5,(int)o->value());}
    xywh {19 74 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_6 {
    label 6
    callback {rkr->efx_Infinity->changepar(6,(int)o->value());}
    xywh {55 74 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_7 {
    label 7
    callback {rkr->efx_Infinity->changepar(7,(int)o->value());}
    xywh {91 74 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Value_Input infinity_8 {
    label 8
    callback {rkr->efx_Infinity->changepar(8,(int)o->value());}
    xywh {130 74 20 15} labelsize 10 labelcolor 7 minimum -64 maximum 64 step 1 textsize 10 textcolor 7
  }
  Fl_Check_Button infinity_rev {
    label Reverse
    user_data 2
    callback {rkr->efx_Infinity->changepar(16,(int)o->value());}
    tooltip {Reverse Left Channel Sweep} xywh {53 94 15 15} down_box BORDER_BOX labelsize 10 labelcolor 7 align 4
  }
  Fl_Counter infinity_stages {
    label Stages
    callback {rkr->efx_Infinity->changepar(17,(int)o->value());}
    xywh {106 93 46 15} type Simple labelsize 10 labelcolor 7 align 4 minimum 1 maximum 12 step 1 value 1 textsize 10
  }
  Fl_Value_Slider infinity_pan {
    label AutoPan
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(397);
 return;
} 
rkr->efx_Infinity->changepar(15,(int)o->value());}
    xywh {53 111 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_stdf {
    label {Stereo Df}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(398);
 return;
} 
rkr->efx_Infinity->changepar(13,(int)o->value());} selected
    tooltip {Sweep L/R Delay} xywh {53 123 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 9 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_start {
    label Start
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(399);
 return;
} 
rkr->efx_Infinity->changepar(10,(int)o->value());}
    xywh {53 135 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_end {
    label End
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(400);
 return;
} 
rkr->efx_Infinity->changepar(11,(int)o->value());}
    xywh {53 147 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_rate {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(401);
 return;
} 
rkr->efx_Infinity->changepar(12,(int)o->value());}
    xywh {53 159 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 600 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider infinity_subdiv {
    label Subdiv
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(402);
 return;
} 
rkr->efx_Infinity->changepar(14,(int)o->value());}
    xywh {53 170 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -16 maximum 16 step 1 textcolor 7
    class SliderW
  }
}
