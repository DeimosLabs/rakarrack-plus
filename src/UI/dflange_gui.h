// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef dflange_gui_h
#define dflange_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include "RKR_Choice.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class DflangeGui : public RKR_Gui_Effect {
public:
  DflangeGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *dflange_activar;
private:
  inline void cb_dflange_activar_i(RKR_Light_Button*, void*);
  static void cb_dflange_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *dflange_preset;
private:
  inline void cb_dflange_preset_i(RKR_Choice*, void*);
  static void cb_dflange_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_dflange_preset[];
public:
  RKR_Slider *dflange_WD;
private:
  inline void cb_dflange_WD_i(RKR_Slider*, void*);
  static void cb_dflange_WD(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_pan;
private:
  inline void cb_dflange_pan_i(RKR_Slider*, void*);
  static void cb_dflange_pan(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_LR;
private:
  inline void cb_dflange_LR_i(RKR_Slider*, void*);
  static void cb_dflange_LR(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_depth;
private:
  inline void cb_dflange_depth_i(RKR_Slider*, void*);
  static void cb_dflange_depth(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_width;
private:
  inline void cb_dflange_width_i(RKR_Slider*, void*);
  static void cb_dflange_width(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_offset;
private:
  inline void cb_dflange_offset_i(RKR_Slider*, void*);
  static void cb_dflange_offset(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_fb;
private:
  inline void cb_dflange_fb_i(RKR_Slider*, void*);
  static void cb_dflange_fb(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_lpf;
private:
  inline void cb_dflange_lpf_i(RKR_Slider*, void*);
  static void cb_dflange_lpf(RKR_Slider*, void*);
public:
  RKR_Check_Button *dflange_subs;
private:
  inline void cb_dflange_subs_i(RKR_Check_Button*, void*);
  static void cb_dflange_subs(RKR_Check_Button*, void*);
public:
  RKR_Check_Button *dflange_tz;
private:
  inline void cb_dflange_tz_i(RKR_Check_Button*, void*);
  static void cb_dflange_tz(RKR_Check_Button*, void*);
public:
  RKR_Check_Button *dflange_intense;
private:
  inline void cb_dflange_intense_i(RKR_Check_Button*, void*);
  static void cb_dflange_intense(RKR_Check_Button*, void*);
public:
  RKR_Slider *dflange_freq;
private:
  inline void cb_dflange_freq_i(RKR_Slider*, void*);
  static void cb_dflange_freq(RKR_Slider*, void*);
public:
  RKR_Slider *dflange_stdf;
private:
  inline void cb_dflange_stdf_i(RKR_Slider*, void*);
  static void cb_dflange_stdf(RKR_Slider*, void*);
public:
  RKR_Choice *dflange_lfotype;
private:
  inline void cb_dflange_lfotype_i(RKR_Choice*, void*);
  static void cb_dflange_lfotype(RKR_Choice*, void*);
public:
  RKR_Slider *dflange_rnd;
private:
  inline void cb_dflange_rnd_i(RKR_Slider*, void*);
  static void cb_dflange_rnd(RKR_Slider*, void*);
  CommonGuiMenu *m_lfo_menu; 
public:
  void parameter_refresh(int index);
};
#endif
