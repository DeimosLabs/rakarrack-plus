// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef ryanwah_gui_h
#define ryanwah_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Value_Input.h"
#include <FL/Fl_Group.H>
#include "sliderW.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"
#include <FL/Fl_Choice.H>
#include <FL/Fl_Counter.H>

class RyanwahGui : public Fl_Group {
public:
  RyanwahGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *ryanwah_activar;
private:
  inline void cb_ryanwah_activar_i(RKR_Light_Button*, void*);
  static void cb_ryanwah_activar(RKR_Light_Button*, void*);
public:
  Fl_Choice *ryanwah_preset;
private:
  inline void cb_ryanwah_preset_i(Fl_Choice*, void*);
  static void cb_ryanwah_preset(Fl_Choice*, void*);
  static Fl_Menu_Item menu_ryanwah_preset[];
public:
  SliderW *ryanwah_WD;
private:
  inline void cb_ryanwah_WD_i(SliderW*, void*);
  static void cb_ryanwah_WD(SliderW*, void*);
public:
  RKR_Check_Button *ryanwah_qm;
private:
  inline void cb_ryanwah_qm_i(RKR_Check_Button*, void*);
  static void cb_ryanwah_qm(RKR_Check_Button*, void*);
public:
  SliderW *ryanwah_lp;
private:
  inline void cb_ryanwah_lp_i(SliderW*, void*);
  static void cb_ryanwah_lp(SliderW*, void*);
public:
  RKR_Check_Button *ryanwah_nat;
private:
  inline void cb_ryanwah_nat_i(RKR_Check_Button*, void*);
  static void cb_ryanwah_nat(RKR_Check_Button*, void*);
public:
  SliderW *ryanwah_bp;
private:
  inline void cb_ryanwah_bp_i(SliderW*, void*);
  static void cb_ryanwah_bp(SliderW*, void*);
public:
  RKR_Check_Button *ryanwah_res;
private:
  inline void cb_ryanwah_res_i(RKR_Check_Button*, void*);
  static void cb_ryanwah_res(RKR_Check_Button*, void*);
public:
  SliderW *ryanwah_hp;
private:
  inline void cb_ryanwah_hp_i(SliderW*, void*);
  static void cb_ryanwah_hp(SliderW*, void*);
public:
  Fl_Counter *svfilter_stages;
private:
  inline void cb_svfilter_stages_i(Fl_Counter*, void*);
  static void cb_svfilter_stages(Fl_Counter*, void*);
public:
  Fl_Choice *ryanwah_lfotype;
private:
  inline void cb_ryanwah_lfotype_i(Fl_Choice*, void*);
  static void cb_ryanwah_lfotype(Fl_Choice*, void*);
public:
  SliderW *ryanwah_dpth;
private:
  inline void cb_ryanwah_dpth_i(SliderW*, void*);
  static void cb_ryanwah_dpth(SliderW*, void*);
public:
  SliderW *ryanwah_freq;
private:
  inline void cb_ryanwah_freq_i(SliderW*, void*);
  static void cb_ryanwah_freq(SliderW*, void*);
public:
  SliderW *ryanwah_q;
private:
  inline void cb_ryanwah_q_i(SliderW*, void*);
  static void cb_ryanwah_q(SliderW*, void*);
public:
  SliderW *ryanwah_rng;
private:
  inline void cb_ryanwah_rng_i(SliderW*, void*);
  static void cb_ryanwah_rng(SliderW*, void*);
public:
  SliderW *ryanwah_ampsnsinv;
private:
  inline void cb_ryanwah_ampsnsinv_i(SliderW*, void*);
  static void cb_ryanwah_ampsnsinv(SliderW*, void*);
public:
  SliderW *ryanwah_ampsns;
private:
  inline void cb_ryanwah_ampsns_i(SliderW*, void*);
  static void cb_ryanwah_ampsns(SliderW*, void*);
public:
  RKR_Value_Input *ryanwah_smooth;
private:
  inline void cb_ryanwah_smooth_i(RKR_Value_Input*, void*);
  static void cb_ryanwah_smooth(RKR_Value_Input*, void*);
public:
  RKR_Value_Input *ryanwah_Rnd;
private:
  inline void cb_ryanwah_Rnd_i(RKR_Value_Input*, void*);
  static void cb_ryanwah_Rnd(RKR_Value_Input*, void*);
public:
  RKR_Value_Input *ryanwah_St;
private:
  inline void cb_ryanwah_St_i(RKR_Value_Input*, void*);
  static void cb_ryanwah_St(RKR_Value_Input*, void*);
public:
  RKR_Value_Input *ryanwah_minfreq;
private:
  inline void cb_ryanwah_minfreq_i(RKR_Value_Input*, void*);
  static void cb_ryanwah_minfreq(RKR_Value_Input*, void*);
  CommonGuiMenu *m_lfo_menu; 
};
#include "RKR_Check_Button.h"
#endif
