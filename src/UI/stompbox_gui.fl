# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

decl {\#include "RKR_Choice.h"} {public global
}

widget_class StompboxGui {
  user_data 1 open
  xywh {1539 137 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "RKR_Slider.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button stomp_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Multi_On_Off);
 o->value(rkr->EFX_Bypass[EFX_STOMPBOX]);
 return;
}
rkr->EFX_Bypass[EFX_STOMPBOX]=(int)o->value();
if((int) o->value()==0)
rkr->efx_StompBox->cleanup();
rgui->findpos(EFX_STOMPBOX,(int)o->value(),o);} selected
    xywh {5 4 34 18} shortcut 0x30 color 62 selection_color 1 labelsize 10 when 1
    class RKR_Light_Button
  }
  Fl_Choice stomp_preset {
    label Preset
    user_data 12039
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12039))rkr->efx_StompBox->setpreset((int)o->value());
stomp_WD->value(rkr->efx_StompBox->getpar(Stomp_Level));
stomp_gain->value(rkr->efx_StompBox->getpar(Stomp_Gain));
stomp_low->value(rkr->efx_StompBox->getpar(Stomp_Bias));
stomp_mid->value(rkr->efx_StompBox->getpar(Stomp_Mid));
stomp_high->value(rkr->efx_StompBox->getpar(Stomp_Tone));

stomp_mode->value(rkr->efx_StompBox->getpar(Stomp_Mode));} open
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label {Amp 1}
      xywh {30 30 45 26} labelsize 10
    }
    MenuItem {} {
      label Odie
      xywh {20 20 45 26} labelsize 10
    }
    MenuItem {} {
      label Grunger
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Hard Dist.}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Ratula
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label {Classic Dist}
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label {Morbid Impalement}
      xywh {30 30 36 21} labelsize 10
    }
    MenuItem {} {
      label {Sharp Metal}
      xywh {40 40 36 21} labelsize 10
    }
    MenuItem {} {
      label {Classic Fuzz}
      xywh {50 50 36 21} labelsize 10
    }
    MenuItem {} {
      label Gnasty
      xywh {60 60 36 21} labelsize 10
    }
    MenuItem {} {
      label {Amp 2}
      xywh {40 40 45 26} labelsize 10
    }
  }
  Fl_Value_Slider stomp_WD {
    label Level
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Level);
 return;
}
rkr->efx_StompBox->changepar(Stomp_Level,(int)o->value());}
    xywh {56 30 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider stomp_gain {
    label Gain
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Gain);
 return;
}
rkr->efx_StompBox->changepar(Stomp_Gain,(int)o->value());}
    xywh {56 58 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider stomp_low {
    label Bias
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Bias);
 return;
}
rkr->efx_StompBox->changepar(Stomp_Bias,(int)o->value());}
    xywh {56 75 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider stomp_mid {
    label Mid
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Mid);
 return;
}
rkr->efx_StompBox->changepar(Stomp_Mid,(int)o->value());}
    xywh {56 92 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 36 minimum -64 maximum 64 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider stomp_high {
    label Tone
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Tone);
 return;
}
rkr->efx_StompBox->changepar(Stomp_Tone,(int)o->value());}
    xywh {56 109 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Choice stomp_mode {
    label Mode
    user_data 12
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Stomp_Mode);
 return;
}

rkr->efx_StompBox->changepar(Stomp_Mode,(int)o->value())}
    xywh {60 139 78 18} down_box BORDER_BOX labelsize 10 labelcolor 7 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label Amp
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label Grunge
      xywh {30 30 36 21} labelsize 10
    }
    MenuItem {} {
      label Rat
      xywh {40 40 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fat Cat}
      xywh {50 50 36 21} labelsize 10
    }
    MenuItem {} {
      label {Dist+}
      xywh {60 60 36 21} labelsize 10
    }
    MenuItem {} {
      label Death
      xywh {70 70 36 21} labelsize 10
    }
    MenuItem {} {
      label {Mid Elves Own}
      xywh {80 80 36 21} labelsize 10
    }
    MenuItem {} {
      label Fuzz
      xywh {90 90 36 21} labelsize 10
    }
  }
}
