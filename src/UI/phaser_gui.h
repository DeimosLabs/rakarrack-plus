// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef phaser_gui_h
#define phaser_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include "RKR_Counter.h"
#include "RKR_Choice.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class PhaserGui : public RKR_Gui_Effect {
public:
  PhaserGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *phaser_activar;
private:
  inline void cb_phaser_activar_i(RKR_Light_Button*, void*);
  static void cb_phaser_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *phaser_preset;
private:
  inline void cb_phaser_preset_i(RKR_Choice*, void*);
  static void cb_phaser_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_phaser_preset[];
public:
  RKR_Slider *phaser_WD;
private:
  inline void cb_phaser_WD_i(RKR_Slider*, void*);
  static void cb_phaser_WD(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_pan;
private:
  inline void cb_phaser_pan_i(RKR_Slider*, void*);
  static void cb_phaser_pan(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_freq;
private:
  inline void cb_phaser_freq_i(RKR_Slider*, void*);
  static void cb_phaser_freq(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_rnd;
private:
  inline void cb_phaser_rnd_i(RKR_Slider*, void*);
  static void cb_phaser_rnd(RKR_Slider*, void*);
public:
  RKR_Choice *phaser_lfotype;
private:
  inline void cb_phaser_lfotype_i(RKR_Choice*, void*);
  static void cb_phaser_lfotype(RKR_Choice*, void*);
public:
  RKR_Check_Button *phaser_subs;
private:
  inline void cb_phaser_subs_i(RKR_Check_Button*, void*);
  static void cb_phaser_subs(RKR_Check_Button*, void*);
public:
  RKR_Slider *phaser_phase;
private:
  inline void cb_phaser_phase_i(RKR_Slider*, void*);
  static void cb_phaser_phase(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_stdf;
private:
  inline void cb_phaser_stdf_i(RKR_Slider*, void*);
  static void cb_phaser_stdf(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_dpth;
private:
  inline void cb_phaser_dpth_i(RKR_Slider*, void*);
  static void cb_phaser_dpth(RKR_Slider*, void*);
public:
  RKR_Slider *phaser_fb;
private:
  inline void cb_phaser_fb_i(RKR_Slider*, void*);
  static void cb_phaser_fb(RKR_Slider*, void*);
public:
  RKR_Counter *phaser_stages;
private:
  inline void cb_phaser_stages_i(RKR_Counter*, void*);
  static void cb_phaser_stages(RKR_Counter*, void*);
public:
  RKR_Slider *phaser_LR;
private:
  inline void cb_phaser_LR_i(RKR_Slider*, void*);
  static void cb_phaser_LR(RKR_Slider*, void*);
  CommonGuiMenu *m_lfo_menu; 
public:
  void parameter_refresh(int index);
  void tap_tempo_update();
};
#endif
