// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef orderwindow_gui_h
#define orderwindow_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include "rakarrack.h"
#include <FL/Fl_Box.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Check_Button.H>

class OrderWindowGui : public Fl_Double_Window {
  void _OrderWindowGui();
public:
  OrderWindowGui(int X, int Y, int W, int H, const char *L = 0);
  OrderWindowGui(int W, int H, const char *L = 0);
  OrderWindowGui();
  Fl_Box *Fondo1;
  Fl_Box *O_TITLE;
  Fl_Browser *Avail_Bro;
  Fl_Button *Pon;
private:
  inline void cb_Pon_i(Fl_Button*, void*);
  static void cb_Pon(Fl_Button*, void*);
public:
  Fl_Browser *Order_Bro;
  Fl_Button *Sube;
private:
  inline void cb_Sube_i(Fl_Button*, void*);
  static void cb_Sube(Fl_Button*, void*);
public:
  Fl_Button *Baja;
private:
  inline void cb_Baja_i(Fl_Button*, void*);
  static void cb_Baja(Fl_Button*, void*);
public:
  Fl_Group *Filters;
  Fl_Button *Fil0;
private:
  inline void cb_Fil0_i(Fl_Button*, void*);
  static void cb_Fil0(Fl_Button*, void*);
public:
  Fl_Button *Fil1;
private:
  inline void cb_Fil1_i(Fl_Button*, void*);
  static void cb_Fil1(Fl_Button*, void*);
public:
  Fl_Button *Fil2;
private:
  inline void cb_Fil2_i(Fl_Button*, void*);
  static void cb_Fil2(Fl_Button*, void*);
public:
  Fl_Button *Fil4;
private:
  inline void cb_Fil4_i(Fl_Button*, void*);
  static void cb_Fil4(Fl_Button*, void*);
public:
  Fl_Button *Fil8;
private:
  inline void cb_Fil8_i(Fl_Button*, void*);
  static void cb_Fil8(Fl_Button*, void*);
public:
  Fl_Button *Fil16;
private:
  inline void cb_Fil16_i(Fl_Button*, void*);
  static void cb_Fil16(Fl_Button*, void*);
public:
  Fl_Button *Fil32;
private:
  inline void cb_Fil32_i(Fl_Button*, void*);
  static void cb_Fil32(Fl_Button*, void*);
public:
  Fl_Button *Fil64;
private:
  inline void cb_Fil64_i(Fl_Button*, void*);
  static void cb_Fil64(Fl_Button*, void*);
public:
  Fl_Button *Fil128;
private:
  inline void cb_Fil128_i(Fl_Button*, void*);
  static void cb_Fil128(Fl_Button*, void*);
public:
  Fl_Check_Button *Order_DeacHide;
private:
  inline void cb_Order_DeacHide_i(Fl_Check_Button*, void*);
  static void cb_Order_DeacHide(Fl_Check_Button*, void*);
public:
  Fl_Button *ok_order;
private:
  inline void cb_ok_order_i(Fl_Button*, void*);
  static void cb_ok_order(Fl_Button*, void*);
public:
  Fl_Button *Cancel_order;
private:
  inline void cb_Cancel_order_i(Fl_Button*, void*);
  static void cb_Cancel_order(Fl_Button*, void*);
  RKR* m_rkr; 
  RKRGUI* m_rgui; 
public:
  void initialize(RKR *_rkr,RKRGUI *_rgui );
};
#endif
