# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cxx}
widget_class CoilGui {
  user_data 1 open
  xywh {1550 57 158 184} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button coil_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->CoilCrafter_Bypass);
 return;
}
rkr->CoilCrafter_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_CoilCrafter->cleanup();
rgui->findpos(33,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x31 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice coil_preset {
    label Preset
    user_data 12033
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12033))rkr->efx_CoilCrafter->setpreset((int) o->value());
coil_WD->value(rkr->efx_CoilCrafter->getpar(0));
coil_tone->value(rkr->efx_CoilCrafter->getpar(7));
coil_origin->value(rkr->efx_CoilCrafter->getpar(1));
coil_destiny->value(rkr->efx_CoilCrafter->getpar(2));
coil_freq1->value(rkr->efx_CoilCrafter->getpar(3));
coil_q1->value(rkr->efx_CoilCrafter->getpar(4));
coil_freq2->value(rkr->efx_CoilCrafter->getpar(5));
coil_q2->value(rkr->efx_CoilCrafter->getpar(6));
coil_mode->value(rkr->efx_CoilCrafter->getpar(8));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label {H to S}
      xywh {32 32 36 21} labelsize 10
    }
    MenuItem {} {
      label {S to H}
      xywh {10 10 36 21} labelsize 10
    }
  }
  Fl_Value_Slider coil_WD {
    label Gain
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(286);
 return;
}
rkr->efx_CoilCrafter->changepar(0,(int)o->value());}
    xywh {53 25 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 value 127 textcolor 7
    class SliderW
  }
  Fl_Value_Slider coil_tone {
    label Tone
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(287);
 return;
}
rkr->efx_CoilCrafter->changepar(7,(int)o->value());}
    xywh {53 41 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 20 maximum 4400 step 1 value 20 textcolor 7
    class SliderW
  }
  Fl_Choice coil_origin {
    label Origin
    user_data 12
    callback {rkr->efx_CoilCrafter->changepar(1,(int)o->value());
coil_freq1->value(rkr->efx_CoilCrafter->getpar(3));
coil_q1->value(rkr->efx_CoilCrafter->getpar(4));}
    xywh {61 55 90 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Off
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fender Strat (old)}
      xywh {42 42 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fender Strat (new)}
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label {Squire Strat}
      xywh {42 42 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fender Hambucker}
      xywh {42 42 36 21} labelsize 10
    }
    MenuItem {} {
      label {Gibson P90}
      xywh {52 52 36 21} labelsize 10
    }
    MenuItem {} {
      label {Gibson Standard}
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label {Gibson Mini}
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label {Gibson Super L6S}
      xywh {10 10 36 21} labelsize 10
    }
  }
  Fl_Value_Slider coil_freq1 {
    label Freq1
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(288);
 return;
}
rkr->efx_CoilCrafter->changepar(3,(int)o->value());}
    xywh {53 79 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 2600 maximum 4500 step 1 value 3200 textcolor 7
    class SliderW
  }
  Fl_Value_Slider coil_q1 {
    label Q1
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(289);
 return;
}
rkr->efx_CoilCrafter->changepar(4,(int)o->value());}
    xywh {53 94 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 10 maximum 65 step 1 textcolor 7
    class SliderW
  }
  Fl_Choice coil_destiny {
    label Destiny
    callback {rkr->efx_CoilCrafter->changepar(2,(int)o->value());
coil_freq2->value(rkr->efx_CoilCrafter->getpar(5));
coil_q2->value(rkr->efx_CoilCrafter->getpar(6));} open
    xywh {61 107 90 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    code0 {o->menu(menu_coil_origin);}
  } {}
  Fl_Value_Slider coil_freq2 {
    label Freq2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(290);
 return;
}
rkr->efx_CoilCrafter->changepar(5,(int)o->value());}
    xywh {53 132 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 2600 maximum 4500 step 1 value 3200 textcolor 7
    class SliderW
  }
  Fl_Value_Slider coil_q2 {
    label Q2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(291);
 return;
}
rkr->efx_CoilCrafter->changepar(6,(int)o->value());} selected
    xywh {53 147 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 10 maximum 65 step 1 value 20 textcolor 7
    class SliderW
  }
  Fl_Check_Button coil_mode {
    label {Pos.}
    user_data 2
    callback {rkr->efx_CoilCrafter->changepar(8,(int)o->value());}
    xywh {13 161 41 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
}
