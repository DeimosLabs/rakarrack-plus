// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef expander_gui_h
#define expander_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Choice.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"

class ExpanderGui : public RKR_Gui_Effect {
public:
  ExpanderGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *expander_activar;
private:
  inline void cb_expander_activar_i(RKR_Light_Button*, void*);
  static void cb_expander_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *expander_preset;
private:
  inline void cb_expander_preset_i(RKR_Choice*, void*);
  static void cb_expander_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_expander_preset[];
public:
  RKR_Slider *expander_ATime;
private:
  inline void cb_expander_ATime_i(RKR_Slider*, void*);
  static void cb_expander_ATime(RKR_Slider*, void*);
public:
  RKR_Slider *expander_RTime;
private:
  inline void cb_expander_RTime_i(RKR_Slider*, void*);
  static void cb_expander_RTime(RKR_Slider*, void*);
public:
  RKR_Slider *expander_shape;
private:
  inline void cb_expander_shape_i(RKR_Slider*, void*);
  static void cb_expander_shape(RKR_Slider*, void*);
public:
  RKR_Slider *expander_threshold;
private:
  inline void cb_expander_threshold_i(RKR_Slider*, void*);
  static void cb_expander_threshold(RKR_Slider*, void*);
public:
  RKR_Slider *expander_level;
private:
  inline void cb_expander_level_i(RKR_Slider*, void*);
  static void cb_expander_level(RKR_Slider*, void*);
public:
  RKR_Slider *expander_LPF;
private:
  inline void cb_expander_LPF_i(RKR_Slider*, void*);
  static void cb_expander_LPF(RKR_Slider*, void*);
public:
  RKR_Slider *expander_HPF;
private:
  inline void cb_expander_HPF_i(RKR_Slider*, void*);
  static void cb_expander_HPF(RKR_Slider*, void*);
public:
  void parameter_refresh(int index);
};
#endif
