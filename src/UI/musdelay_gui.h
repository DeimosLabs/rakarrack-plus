// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef musdelay_gui_h
#define musdelay_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Choice.h"
#include <FL/Fl_Group.H>
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"

class MusdelayGui : public Fl_Group {
public:
  MusdelayGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *musdelay_activar;
private:
  inline void cb_musdelay_activar_i(RKR_Light_Button*, void*);
  static void cb_musdelay_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *musdelay_preset;
private:
  inline void cb_musdelay_preset_i(RKR_Choice*, void*);
  static void cb_musdelay_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_musdelay_preset[];
public:
  RKR_Slider *musdelay_WD;
private:
  inline void cb_musdelay_WD_i(RKR_Slider*, void*);
  static void cb_musdelay_WD(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_LRc;
private:
  inline void cb_musdelay_LRc_i(RKR_Slider*, void*);
  static void cb_musdelay_LRc(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_pan1;
private:
  inline void cb_musdelay_pan1_i(RKR_Slider*, void*);
  static void cb_musdelay_pan1(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_pan2;
private:
  inline void cb_musdelay_pan2_i(RKR_Slider*, void*);
  static void cb_musdelay_pan2(RKR_Slider*, void*);
public:
  RKR_Choice *musdelay_delay1;
private:
  inline void cb_musdelay_delay1_i(RKR_Choice*, void*);
  static void cb_musdelay_delay1(RKR_Choice*, void*);
  static Fl_Menu_Item menu_musdelay_delay1[];
public:
  RKR_Choice *musdelay_delay3;
private:
  inline void cb_musdelay_delay3_i(RKR_Choice*, void*);
  static void cb_musdelay_delay3(RKR_Choice*, void*);
  static Fl_Menu_Item menu_musdelay_delay3[];
public:
  RKR_Choice *musdelay_delay2;
private:
  inline void cb_musdelay_delay2_i(RKR_Choice*, void*);
  static void cb_musdelay_delay2(RKR_Choice*, void*);
public:
  RKR_Slider *musdelay_tempo;
private:
  inline void cb_musdelay_tempo_i(RKR_Slider*, void*);
  static void cb_musdelay_tempo(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_gain1;
private:
  inline void cb_musdelay_gain1_i(RKR_Slider*, void*);
  static void cb_musdelay_gain1(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_gain2;
private:
  inline void cb_musdelay_gain2_i(RKR_Slider*, void*);
  static void cb_musdelay_gain2(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_fb1;
private:
  inline void cb_musdelay_fb1_i(RKR_Slider*, void*);
  static void cb_musdelay_fb1(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_fb2;
private:
  inline void cb_musdelay_fb2_i(RKR_Slider*, void*);
  static void cb_musdelay_fb2(RKR_Slider*, void*);
public:
  RKR_Slider *musdelay_damp;
private:
  inline void cb_musdelay_damp_i(RKR_Slider*, void*);
  static void cb_musdelay_damp(RKR_Slider*, void*);
};
#endif
