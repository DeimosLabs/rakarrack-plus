// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "common_gui_menu.h"

Fl_Menu_Item CommonGuiMenu::menu_lfo_type[] = {
 {"Sine", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 10, 0},
 {"Tri", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 10, 0},
 {"Ramp Up", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Ramp Down", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"ZigZag", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"M. Sqare", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"M.Saw", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"L. Fractal", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"L. Fractal XY", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"S/H Random", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"-Sine +Tri", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"-Tri +Sine", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item CommonGuiMenu::menu_distortion_type[] = {
 /*
  The dist_tipo menu items are used by distortion, overdrive, derelict NEWDIST, and distband.
  If any of these menu items change here, then they must be changed in the others.
  */
 {"Atan", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Asym1", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Pow", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Sine", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Qnts", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Zigzg", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Lmt", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"LmtU", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"LmtL", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"ILmt", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Clip", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Asym2", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Pow2", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Sgm", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Crunch", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Hard Crunch", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Dirty Octave+", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"M.Square", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"M.Saw", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Compress", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Overdrive", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Soft", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Super Soft", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Hard Compress", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Lmt-NoGain", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"FET", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"DynoFET", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Valve 1", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Valve 2", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {"Diode clipper", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 9, 0},
 {0,0,0,0,0,0,0,0,0}
};
CommonGuiMenu::CommonGuiMenu(int X, int Y, int W, int H, const char *L)
  : Fl_Group(0, 0, W, H, L) {
this->box(FL_UP_BOX);
this->color(FL_FOREGROUND_COLOR);
this->selection_color(FL_FOREGROUND_COLOR);
this->user_data((void*)(1));
this->align(Fl_Align(96|FL_ALIGN_INSIDE));
{ lfo_type = new Fl_Choice(61, 77, 72, 16, "LFO Type");
  lfo_type->down_box(FL_BORDER_BOX);
  lfo_type->selection_color(FL_FOREGROUND_COLOR);
  lfo_type->labelsize(10);
  lfo_type->labelcolor(FL_BACKGROUND2_COLOR);
  lfo_type->textsize(10);
  lfo_type->textcolor(FL_BACKGROUND2_COLOR);
  lfo_type->user_data((void*)(12));
  lfo_type->menu(menu_lfo_type);
} // Fl_Choice* lfo_type
{ distortion_type = new Fl_Choice(44, 101, 70, 16, "Type");
  distortion_type->down_box(FL_BORDER_BOX);
  distortion_type->selection_color(FL_FOREGROUND_COLOR);
  distortion_type->labelsize(10);
  distortion_type->labelcolor(FL_BACKGROUND2_COLOR);
  distortion_type->textsize(10);
  distortion_type->textcolor(FL_BACKGROUND2_COLOR);
  distortion_type->user_data((void*)(12));
  distortion_type->menu(menu_distortion_type);
} // Fl_Choice* distortion_type
position(X, Y);
end();
}

/**
 Common menu types used by many efx.
*/
Fl_Menu_Item * CommonGuiMenu::get_lfo_type() {
  return menu_lfo_type;
}

/**
 Common distortion types used by various efx.
*/
Fl_Menu_Item* CommonGuiMenu::get_distortion_type() {
  return menu_distortion_type;
}
