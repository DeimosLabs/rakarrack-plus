# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

decl {\#include "RKR_Check_Button.h"} {public global
}

decl {\#include "RKR_Choice.h"} {public global
}

widget_class ConvoGui {
  user_data 1 open
  xywh {1550 57 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "RKR_Slider.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button convo_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Multi_On_Off);
 o->value(rkr->Convol_Bypass);
 return;
}
rkr->Convol_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Convol->cleanup();
rgui->findpos(EFX_CONVOLOTRON,(int)o->value(),o);} selected
    xywh {6 4 34 18} shortcut 0x35 color 62 selection_color 1 labelsize 10 align 84 when 1
    class RKR_Light_Button
  }
  Fl_Choice convo_preset {
    label Preset
    user_data 12029
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12029))rkr->efx_Convol->setpreset((int) o->value());
convo_pan->value(rkr->efx_Convol->getpar(Convo_Pan)-64);
convo_level->value(rkr->efx_Convol->getpar(Convo_Level));
convo_WD->value(Dry_Wet(rkr->efx_Convol->getpar(Convo_DryWet)));
convo_damp->value(rkr->efx_Convol->getpar(Convo_Damp));
convo_fnum->value(rkr->efx_Convol->getpar(Convo_Set_File));
convo_length->value(rkr->efx_Convol->getpar(Convo_Length));
convo_user->value(rkr->efx_Convol->getpar(Convo_User_File));
convo_user->do_callback();
convo_safe->value(rkr->efx_Convol->getpar(Convo_Safe));
convo_fb->value(rkr->efx_Convol->getpar(Convo_Feedback));}
    xywh {79 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label {Marshall JCM200}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fender Superchamp}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Mesa Boogie}
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label {Mesa Boogie 2}
      xywh {77 77 36 21} labelsize 10
    }
  }
  Fl_Value_Slider convo_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_DryWet);
 return;
}
rkr->efx_Convol->changepar(Convo_DryWet,Dry_Wet((int)(o->value())));}
    xywh {56 30 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider convo_pan {
    label Pan
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_Pan);
 return;
}
rkr->efx_Convol->changepar(Convo_Pan,(int)(o->value()+64));}
    xywh {56 46 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider convo_level {
    label Level
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_Level);
 return;
}
rkr->efx_Convol->changepar(Convo_Level,(int)o->value());}
    xywh {56 62 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider convo_damp {
    label Damp
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_Damp);
 return;
}
rkr->efx_Convol->changepar(Convo_Damp,(int)o->value());}
    xywh {56 78 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider convo_fb {
    label Feedback
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_Feedback);
 return;
}
rkr->efx_Convol->changepar(Convo_Feedback,(int)o->value());}
    xywh {56 94 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider convo_length {
    label Length
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(MC_Convo_Length);
 return;
}
rkr->efx_Convol->changepar(Convo_Length,(int)o->value());}
    xywh {56 110 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 minimum 5 maximum 250 step 1 value 100 textcolor 7
    class RKR_Slider
  }
  Fl_Check_Button convo_user {
    label User
    user_data 2
    callback {rkr->efx_Convol->changepar(Convo_User_File,(int)o->value());

if((int)o->value())B_wav->activate(); else B_wav->deactivate();}
    xywh {110 126 43 15} down_box BORDER_BOX labelsize 10 labelcolor 7
    class RKR_Check_Button
  }
  Fl_Check_Button convo_safe {
    label {Safe Mode}
    user_data 2
    callback {rkr->efx_Convol->changepar(Convo_Safe,(int)o->value())}
    xywh {19 141 73 15} down_box BORDER_BOX labelsize 10 labelcolor 7
    class RKR_Check_Button
  }
  Fl_Button B_wav {
    label Browse
    user_data 2
    callback {char *filename;
filename=fl_file_chooser("Load Wav File:","(*.wav)",NULL,0);
if (filename==NULL) return;
filename=fl_filename_setext(filename,".wav");
strcpy(rkr->efx_Convol->Filename,filename);
if(!rkr->efx_Convol->setfile(USERFILE))
{
    fl_alert("Error loading %s file!\\n", filename);
}}
    xywh {106 143 46 12} labelsize 10 deactivate
    class RKR_Button
  }
  Fl_Choice convo_fnum {
    label Preset
    user_data 12
    callback {rkr->efx_Convol->changepar(Convo_Set_File,(int)o->value());}
    xywh {51 159 101 16} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 textsize 10 textcolor 7
    class RKR_Choice
  } {
    MenuItem {} {
      label {Marshall JCM200}
      xywh {44 44 36 21} labelsize 10
    }
    MenuItem {} {
      label {Fender Superchamp}
      xywh {54 54 36 21} labelsize 10
    }
    MenuItem {} {
      label {Mesa Boogie}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Mesa Boogie 2}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Marshall Plexi}
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label Bassman
      xywh {10 10 36 21} labelsize 10
    }
    MenuItem {} {
      label JCM2000
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label Ampeg
      xywh {30 30 36 21} labelsize 10
    }
    MenuItem {} {
      label Marshall2
      xywh {40 40 36 21} labelsize 10
    }
  }
}
