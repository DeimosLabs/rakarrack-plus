# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
widget_class ChorusGui {
  user_data 1 open
  xywh {1075 81 158 184} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button chorus_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->Chorus_Bypass);
 return;
}
rkr->Chorus_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Chorus->cleanup();
rgui->findpos(5,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x36 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice chorus_preset {
    label Preset
    user_data 12005
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12005))rkr->efx_Chorus->setpreset(0,(int) o->value());
chorus_WD->value(rkr->efx_Chorus->getpar(0)-64);
chorus_pan->value(rkr->efx_Chorus->getpar(1)-64);
chorus_freq->value(rkr->efx_Chorus->getpar(2));
chorus_rnd->value(rkr->efx_Chorus->getpar(3));
chorus_lfotype->value(rkr->efx_Chorus->getpar(4));
chorus_stdf->value(rkr->efx_Chorus->getpar(5));
chorus_dpth->value(rkr->efx_Chorus->getpar(6));
chorus_delay->value(rkr->efx_Chorus->getpar(7));
chorus_fb->value(rkr->efx_Chorus->getpar(8));
chorus_LR->value(rkr->efx_Chorus->getpar(9)-64);
chorus_subs->value(rkr->efx_Chorus->getpar(11));
chorus_awesome->value(rkr->efx_Chorus->getpar(12));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label {Chorus 1}
      xywh {102 102 36 21} labelsize 10
    }
    MenuItem {} {
      label {Chorus 2}
      xywh {102 102 36 21} labelsize 10
    }
    MenuItem {} {
      label {Chorus 3}
      xywh {102 102 36 21} labelsize 10
    }
    MenuItem {} {
      label {Celeste 1}
      xywh {112 112 36 21} labelsize 10
    }
    MenuItem {} {
      label {Celeste 2}
      xywh {122 122 36 21} labelsize 10
    }
  }
  Fl_Value_Slider chorus_WD {
    label {Wet/Dry}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(52);
 return;
} 
rkr->efx_Chorus->changepar(0,(int)(o->value()+64));}
    xywh {49 29 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_pan {
    label Pan
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(50);
 return;
} 
rkr->efx_Chorus->changepar(1,(int)(o->value()+64));}
    xywh {49 41 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_freq {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(72);
 return;
} 
rkr->efx_Chorus->changepar(2,(int)o->value());}
    xywh {49 53 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 600 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_rnd {
    label Rnd
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(105);
 return;
} 
rkr->efx_Chorus->changepar(3,(int)o->value());}
    xywh {49 65 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Choice chorus_lfotype {
    label {LFO Type}
    user_data 12
    callback {rkr->efx_Chorus->changepar(4,(int)o->value())} open
    xywh {61 77 72 16} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Sine
      xywh {102 102 36 21} labelsize 10
    }
    MenuItem {} {
      label Tri
      xywh {102 102 36 21} labelsize 10
    }
    MenuItem {} {
      label {Ramp Up}
      xywh {50 50 36 21} labelsize 9
    }
    MenuItem {} {
      label {Ramp Down}
      xywh {50 50 36 21} labelsize 9
    }
    MenuItem {} {
      label ZigZag
      xywh {60 60 36 21} labelsize 9
    }
    MenuItem {} {
      label {M. Sqare}
      xywh {50 50 36 21} labelsize 9
    }
    MenuItem {} {
      label {M.Saw}
      xywh {50 50 36 21} labelsize 9
    }
    MenuItem {} {
      label {L. Fractal}
      xywh {60 60 36 21} labelsize 9
    }
    MenuItem {} {
      label {L. Fractal XY}
      xywh {70 70 36 21} labelsize 9
    }
    MenuItem {} {
      label {S/H Random}
      xywh {80 80 36 21} labelsize 9
    }
    MenuItem {} {
      label {-Sine +Tri}
      xywh {90 90 36 21} labelsize 9
    }
    MenuItem {} {
      label {-Tri +Sine}
      xywh {100 100 36 21} labelsize 9
    }
  }
  Fl_Check_Button chorus_subs {
    label Subtract
    user_data 2
    callback {rkr->efx_Chorus->changepar(11,(int)o->value())}
    xywh {25 94 62 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Check_Button chorus_awesome {
    label Intense
    user_data 2
    callback {rkr->efx_Chorus->changepar(12,(int)o->value())}
    xywh {88 95 56 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Value_Slider chorus_stdf {
    label {St.df}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(99);
 return;
} 
rkr->efx_Chorus->changepar(5,(int)o->value());}
    xywh {49 115 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_dpth {
    label Depth
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(23);
 return;
} 
rkr->efx_Chorus->changepar(6,(int)o->value());}
    xywh {49 128 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_delay {
    label Delay
    callback {rkr->efx_Chorus->changepar(7,(int)o->value());}
    xywh {49 141 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_fb {
    label Fb
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(79);
 return;
} 
rkr->efx_Chorus->changepar(8,(int)o->value());}
    xywh {49 154 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider chorus_LR {
    label {L/R.Cr}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(91);
 return;
} 
rkr->efx_Chorus->changepar(9,(int)(o->value()+64));} selected
    xywh {49 168 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
}
