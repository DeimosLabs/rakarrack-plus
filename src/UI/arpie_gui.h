// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef arpie_gui_h
#define arpie_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Choice.h"
#include "RKR_Counter.h"
#include <FL/Fl_Group.H>
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class ArpieGui : public Fl_Group {
public:
  ArpieGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *arpie_activar;
private:
  inline void cb_arpie_activar_i(RKR_Light_Button*, void*);
  static void cb_arpie_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *arpie_preset;
private:
  inline void cb_arpie_preset_i(RKR_Choice*, void*);
  static void cb_arpie_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_arpie_preset[];
public:
  RKR_Slider *arpie_WD;
private:
  inline void cb_arpie_WD_i(RKR_Slider*, void*);
  static void cb_arpie_WD(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_arpe;
private:
  inline void cb_arpie_arpe_i(RKR_Slider*, void*);
  static void cb_arpie_arpe(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_pan;
private:
  inline void cb_arpie_pan_i(RKR_Slider*, void*);
  static void cb_arpie_pan(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_delay;
private:
  inline void cb_arpie_delay_i(RKR_Slider*, void*);
  static void cb_arpie_delay(RKR_Slider*, void*);
public:
  RKR_Choice *arpie_subdiv;
private:
  inline void cb_arpie_subdiv_i(RKR_Choice*, void*);
  static void cb_arpie_subdiv(RKR_Choice*, void*);
public:
  RKR_Slider *arpie_LRdl;
private:
  inline void cb_arpie_LRdl_i(RKR_Slider*, void*);
  static void cb_arpie_LRdl(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_LRc;
private:
  inline void cb_arpie_LRc_i(RKR_Slider*, void*);
  static void cb_arpie_LRc(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_fb;
private:
  inline void cb_arpie_fb_i(RKR_Slider*, void*);
  static void cb_arpie_fb(RKR_Slider*, void*);
public:
  RKR_Slider *arpie_damp;
private:
  inline void cb_arpie_damp_i(RKR_Slider*, void*);
  static void cb_arpie_damp(RKR_Slider*, void*);
public:
  RKR_Counter *arpie_harm;
private:
  inline void cb_arpie_harm_i(RKR_Counter*, void*);
  static void cb_arpie_harm(RKR_Counter*, void*);
public:
  RKR_Choice *arpie_pattern;
private:
  inline void cb_arpie_pattern_i(RKR_Choice*, void*);
  static void cb_arpie_pattern(RKR_Choice*, void*);
  static Fl_Menu_Item menu_arpie_pattern[];
  CommonGuiMenu *m_subdiv_menu; 
};
#endif
