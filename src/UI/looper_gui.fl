# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
widget_class LooperGui {
  user_data 1 open selected
  xywh {1550 52 158 184} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button looper_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->Looper_Bypass);
 return;
}
rkr->Looper_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Looper->cleanup();
rgui->findpos(30,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x35 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice looper_preset {
    label Preset
    user_data 12030
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12030))rkr->efx_Looper->setpreset((int) o->value());
looper_WD->value(rkr->efx_Looper->getpar(0)-64);
looper_play->value(rkr->efx_Looper->getpar(1));
looper_record->value(rkr->efx_Looper->getpar(3));
looper_rv->value(rkr->efx_Looper->getpar(5));
looper_ap->value(rkr->efx_Looper->getpar(9));
looper_level1->value(rkr->efx_Looper->getpar(6));
looper_level2->value(rkr->efx_Looper->getpar(10));

looper_t1->value(rkr->efx_Looper->getpar(7));
looper_t2->value(rkr->efx_Looper->getpar(8));
looper_r1->value(rkr->efx_Looper->getpar(11));
looper_r2->value(rkr->efx_Looper->getpar(12));
looper_lnk->value(rkr->efx_Looper->getpar(13));
looper_Tempo->value(rkr->efx_Looper->getpar(14));
looper_bar->value(rkr->efx_Looper->getpar(15));
looper_ms->value(rkr->efx_Looper->getpar(17));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Looper
      xywh {67 67 36 21} labelsize 10
    }
    MenuItem {} {
      label Reverse
      xywh {0 0 36 21} labelsize 10
    }
  }
  Fl_Value_Slider looper_WD {
    label {Wet/Dry}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(267);
 return;
}
rkr->efx_Looper->changepar(0,(int)(o->value()+64));}
    xywh {51 25 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider looper_level1 {
    label {Level 1}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(268);
 return;
}
rkr->efx_Looper->changepar(6,(int)o->value());}
    xywh {51 37 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider looper_level2 {
    label {Level 2}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(269);
 return;
}
rkr->efx_Looper->changepar(10,(int)o->value());}
    xywh {51 49 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider looper_Tempo {
    label Tempo
    callback {rkr->efx_Looper->changepar(14,(int)o->value());}
    xywh {51 61 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 minimum 20 maximum 380 step 1 value 100 textcolor 7
    class SliderW
  }
  Fl_Choice looper_bar {
    label {Time Sig.}
    callback {rkr->efx_Looper->changepar(15,(int)o->value());} open
    xywh {57 73 40 15} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    code0 {o->menu(m_looper_bar->get_time_sig());}
  } {}
  Fl_Choice looper_ms {
    label MS
    callback {rkr->efx_Looper->changepar(17,(int)o->value());} open
    xywh {121 73 29 15} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    code0 {o->menu(m_looper_ms->get_metronome_sound());}
  } {}
  Fl_Check_Button looper_rv {
    label Reverse
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(270);
 return;
}
rkr->efx_Looper->changepar(5,(int)o->value())}
    xywh {8 89 61 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Check_Button looper_ap {
    label {Auto Play}
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(271);
 return;
}
rkr->efx_Looper->changepar(9,(int)o->value())}
    xywh {78 89 67 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Box Box_Play {
    label {Play/Stop}
    xywh {4 103 52 14} labelsize 10 labelcolor 7
  }
  Fl_Box Box_P {
    label Pause
    xywh {58 103 44 14} labelsize 10 labelcolor 7
  }
  Fl_Box {} {
    label Record
    xywh {109 103 44 14} labelsize 10 labelcolor 7
  }
  Fl_Button looper_play {
    label {@|>}
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(272);
 return;
}
rkr->efx_Looper->changepar(1,(int)o->value());
rgui->update_looper();}
    tooltip {Play - Shortcut 'F5'} xywh {8 117 44 22} type Toggle shortcut 0xffc2
  }
  Fl_Button looper_stop {
    label {@||}
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(273);
 return;
}
rkr->efx_Looper->changepar(2,(int)o->value());
rgui->update_looper();}
    tooltip {Stop - Shortcut 'F6'} xywh {59 117 44 22} type Toggle shortcut 0xffc3
  }
  Fl_Button looper_record {
    label {@circle}
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(274);
 return;
}
rkr->efx_Looper->changepar(3,(int)o->value());
rgui->update_looper();}
    xywh {109 117 44 22} type Toggle labelcolor 1
  }
  Fl_Box {} {
    label Track
    xywh {71 149 39 14} labelsize 10 labelcolor 7
  }
  Fl_Check_Button looper_r1 {
    label R1
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(275);
 return;
}
rkr->efx_Looper->changepar(11,(int)o->value())}
    xywh {8 153 15 15} down_box BORDER_BOX labelsize 10 labelcolor 7 align 1
  }
  Fl_Check_Button looper_r2 {
    label R2
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(276);
 return;
}
rkr->efx_Looper->changepar(12,(int)o->value())}
    xywh {27 153 15 15} down_box BORDER_BOX labelsize 10 labelcolor 7 align 1
  }
  Fl_Button looper_t1 {
    label 1
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(277);
 return;
}
rkr->efx_Looper->changepar(7,(int)o->value());
rgui->update_looper();}
    xywh {111 147 18 18} type Toggle labelsize 10 align 16
  }
  Fl_Button looper_t2 {
    label 2
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(278);
 return;
}
rkr->efx_Looper->changepar(8,(int)o->value());
rgui->update_looper();}
    xywh {134 147 18 18} type Toggle labelsize 10 align 16
  }
  Fl_Check_Button looper_lnk {
    label Lnk
    user_data 2
    callback {rkr->efx_Looper->changepar(13,(int)o->value())}
    xywh {27 167 15 15} down_box BORDER_BOX labelsize 10 labelcolor 7 align 4
  }
  Fl_Button looper_clear {
    label Clear
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(279);
 return;
}
rkr->efx_Looper->changepar(4,(int)o->value());
rgui->update_looper();}
    xywh {46 165 43 14} labelsize 10
  }
  Fl_Check_Button looper_mt {
    label M
    user_data 2
    callback {rkr->efx_Looper->changepar(16,(int)o->value())}
    xywh {93 167 27 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Box L_TimePos {
    xywh {121 166 35 14} box DOWN_BOX align 84
  }
  decl {CommonGuiMenu *m_looper_bar;} {private local
  }
  decl {CommonGuiMenu *m_looper_ms;} {private local
  }
}
