# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
widget_class {\#include "common_gui_menu.h"} PanGui {
  user_data 1 open
  xywh {1333 108 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"}
  code3 {\#include "common_gui_menu.h"} visible position_relative
} {
  Fl_Light_Button pan_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->Pan_Bypass);
 return;
}
rkr->Pan_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_Pan->cleanup();
rgui->findpos(13,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x36 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice pan_preset {
    label Preset
    user_data 12013
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12013))rkr->efx_Pan->setpreset((int) o->value());
pan_WD->value(Dry_Wet(rkr->efx_Pan->getpar(0)));
pan_pan->value(rkr->efx_Pan->getpar(1)-64);
pan_freq->value(rkr->efx_Pan->getpar(2));
pan_rnd->value(rkr->efx_Pan->getpar(3));
pan_lfotype->value(rkr->efx_Pan->getpar(4));
pan_stdf->value(rkr->efx_Pan->getpar(5));
pan_extra->value(rkr->efx_Pan->getpar(6));
pan_autopan->value(rkr->efx_Pan->getpar(7));
pan_extraon->value(rkr->efx_Pan->getpar(8));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label AutoPan
      xywh {62 62 36 21} labelsize 10
    }
    MenuItem {} {
      label {Extra Stereo}
      xywh {62 62 36 21} labelsize 10
    }
  }
  Fl_Value_Slider pan_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(58);
 return;
} 
rkr->efx_Pan->changepar(0,Dry_Wet((int)(o->value())));}
    xywh {56 29 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider pan_pan {
    label Pan
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(67);
 return;
} 
rkr->efx_Pan->changepar(1,(int)(o->value()+64));}
    xywh {56 44 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Check_Button pan_autopan {
    label AutoPan
    user_data 2
    callback {rkr->efx_Pan->changepar(7,(int)o->value())}
    xywh {35 56 70 18} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Value_Slider pan_freq {
    label Tempo
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(77);
 return;
} 
rkr->efx_Pan->changepar(2,(int)o->value());}
    xywh {56 73 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 600 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider pan_rnd {
    label Random
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(110);
 return;
} 
rkr->efx_Pan->changepar(3,(int)o->value());}
    xywh {56 85 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Choice pan_lfotype {
    label {LFO Type}
    callback {rkr->efx_Pan->changepar(4,(int)o->value());} open
    xywh {78 103 72 16} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 textsize 10 textcolor 7
    code0 {o->menu(m_lfo_menu->get_lfo_type());}
  } {}
  Fl_Value_Slider pan_stdf {
    label {Stereo Df}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(104);
 return;
} 
rkr->efx_Pan->changepar(5,(int)o->value());}
    tooltip {LFO L/R Delay} xywh {56 124 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Check_Button pan_extraon {
    label {Extra Stereo}
    user_data 2
    callback {rkr->efx_Pan->changepar(8,(int)o->value())}
    tooltip {Enable Extra Stereo} xywh {35 140 82 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
  Fl_Value_Slider pan_extra {
    label {E.Stereo}
    callback {rkr->efx_Pan->changepar(6,(int)o->value());} selected
    tooltip {Extra Stereo Amount} xywh {56 161 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  decl {CommonGuiMenu *m_lfo_menu;} {private local
  }
}
