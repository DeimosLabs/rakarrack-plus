# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

widget_class ShelfGui {
  user_data 1 open
  xywh {1550 56 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button shelf_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->ShelfBoost_Bypass);
 return;
}
rkr->ShelfBoost_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_ShelfBoost->cleanup();
rgui->findpos(34,(int)o->value(),o);} selected
    xywh {5 4 34 18} shortcut 0x31 color 62 selection_color 1 labelsize 10 align 84 when 1
    class RKR_Light_Button
  }
  Fl_Choice shelf_preset {
    label Preset
    user_data 12034
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12034))rkr->efx_ShelfBoost->setpreset((int) o->value());
shelf_gain->value(rkr->efx_ShelfBoost->getpar(0));
shelf_q1->value(rkr->efx_ShelfBoost->getpar(1));
shelf_freq1->value(rkr->efx_ShelfBoost->getpar(2));
shelf_mode->value(rkr->efx_ShelfBoost->getpar(3));
shelf_level->value(rkr->efx_ShelfBoost->getpar(4));}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label Treble
      xywh {42 42 36 21} labelsize 10
    }
    MenuItem {} {
      label Mid
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label Bass
      xywh {0 0 36 21} labelsize 10
    }
    MenuItem {} {
      label {Distortion 1}
      xywh {0 0 36 21} labelsize 10
    }
  }
  Fl_Value_Slider shelf_gain {
    label Gain
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(292);
 return;
}
rkr->efx_ShelfBoost->changepar(0,(int)o->value());}
    xywh {56 26 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider shelf_level {
    label Level
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(293);
 return;
}
rkr->efx_ShelfBoost->changepar(4,(int)o->value());}
    xywh {56 86 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 127 step 1 value 32 textcolor 7
    class SliderW
  }
  Fl_Value_Slider shelf_freq1 {
    label Tone
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(294);
 return;
}
rkr->efx_ShelfBoost->changepar(2,(int)o->value());}
    xywh {56 106 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 220 maximum 16000 step 1 value 1000 textcolor 7
    class SliderW
  }
  Fl_Value_Slider shelf_q1 {
    label Presence
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(295);
 return;
}
rkr->efx_ShelfBoost->changepar(1,(int)o->value());}
    xywh {56 126 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 64 step 1 textcolor 7
    class SliderW
  }
  Fl_Check_Button shelf_mode {
    label Stereo
    user_data 2
    callback {rkr->efx_ShelfBoost->changepar(3,(int)o->value());}
    xywh {13 161 54 15} down_box BORDER_BOX labelsize 10 labelcolor 7
  }
}
