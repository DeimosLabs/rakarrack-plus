# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cxx}
widget_class MusdelayGui {
  user_data 1 open
  xywh {1640 159 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "sliderW.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"} visible position_relative
} {
  Fl_Light_Button musdelay_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(116);
 o->value(rkr->MusDelay_Bypass);
 return;
}
rkr->MusDelay_Bypass=(int)o->value();
if((int) o->value()==0)
rkr->efx_MusDelay->cleanup();
rgui->findpos(15,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x35 color 62 selection_color 1 labelsize 10 align 84 when 1
  }
  Fl_Choice musdelay_preset {
    label Preset
    user_data 12015
    callback {rkr->MusDelay_Bypass=0;
long long ud= (long long) v;
if((ud==0)||(ud==12015))rkr->efx_MusDelay->setpreset(o->value());
musdelay_WD->value(Dry_Wet(rkr->efx_MusDelay->getpar(0)));
musdelay_tempo->value(rkr->efx_MusDelay->getpar(10));
musdelay_pan1->value(rkr->efx_MusDelay->getpar(1)-64);
musdelay_pan2->value(rkr->efx_MusDelay->getpar(7)-64);
musdelay_delay1->value(rkr->efx_MusDelay->getpar(2)-1);
musdelay_delay2->value(rkr->efx_MusDelay->getpar(8)-1);
musdelay_delay3->value(rkr->efx_MusDelay->getpar(3)-1);
musdelay_fb1->value(rkr->efx_MusDelay->getpar(5));
musdelay_fb2->value(rkr->efx_MusDelay->getpar(9));
musdelay_LRc->value(rkr->efx_MusDelay->getpar(4));
musdelay_gain1->value(rkr->efx_MusDelay->getpar(11));
musdelay_gain2->value(rkr->efx_MusDelay->getpar(12));
musdelay_damp->value(rkr->efx_MusDelay->getpar(6));
if((int)musdelay_activar->value())rkr->MusDelay_Bypass=1;}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label {Echo 1}
      xywh {62 62 36 21} labelsize 10
    }
    MenuItem {} {
      label {Echo 2}
      xywh {62 62 36 21} labelsize 10
    }
  }
  Fl_Value_Slider musdelay_WD {
    label {Dry/Wet}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(56);
 return;
} 
rkr->efx_MusDelay->changepar(0,Dry_Wet((int)o->value()));}
    xywh {53 26 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_LRc {
    label {L/R Cross}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(98);
 return;
} 
rkr->efx_MusDelay->changepar(4,(int)o->value());} selected
    xywh {53 38 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 9 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_pan1 {
    label {Pan 1}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(62);
 return;
} 
rkr->efx_MusDelay->changepar(1,(int)o->value()+64);}
    xywh {53 50 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_pan2 {
    label {Pan 2}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(65);
 return;
} 
rkr->efx_MusDelay->changepar(7,(int)o->value()+64);}
    xywh {53 62 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum -64 maximum 63 step 1 textcolor 7
    class SliderW
  }
  Fl_Choice musdelay_delay1 {
    user_data 12
    callback {rkr->MusDelay_Bypass=0;
rkr->efx_MusDelay->changepar(2,o->value()+1);
if((int)musdelay_activar->value())rkr->MusDelay_Bypass=1;}
    tooltip {Delay 1} xywh {10 82 38 14} down_box BORDER_BOX labelsize 10 labelcolor 7 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label 1
      xywh {0 0 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/2}
      xywh {10 10 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/3}
      xywh {20 20 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/4}
      xywh {30 30 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/5}
      xywh {40 40 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/6}
      xywh {50 50 45 26} labelsize 10
    }
  }
  Fl_Choice musdelay_delay3 {
    user_data 12
    callback {rkr->MusDelay_Bypass=0;
rkr->efx_MusDelay->changepar(3,o->value()+1);
if((int)musdelay_activar->value())rkr->MusDelay_Bypass=1;}
    tooltip {Delay Offset} xywh {62 82 38 14} down_box BORDER_BOX labelsize 10 labelcolor 7 textsize 10 textcolor 7
  } {
    MenuItem {} {
      label 1
      xywh {10 10 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/2}
      xywh {20 20 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/3}
      xywh {30 30 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/4}
      xywh {40 40 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/5}
      xywh {50 50 45 26} labelsize 10
    }
    MenuItem {} {
      label {1/6}
      xywh {60 60 45 26} labelsize 10
    }
    MenuItem {} {
      label 0
      xywh {0 0 45 26} labelsize 10
    }
  }
  Fl_Choice musdelay_delay2 {
    callback {rkr->MusDelay_Bypass=0;
rkr->efx_MusDelay->changepar(8,o->value()+1);
if((int)musdelay_activar->value())rkr->MusDelay_Bypass=1;}
    tooltip {Delay 2} xywh {114 82 38 14} down_box BORDER_BOX labelsize 10 labelcolor 7 textsize 10 textcolor 7
    code0 {o->menu(menu_musdelay_delay1);}
  } {}
  Fl_Value_Slider musdelay_tempo {
    label Tempo
    callback {rkr->MusDelay_Bypass=0;
rkr->efx_MusDelay->changepar(10,(int)o->value());
if((int)musdelay_activar->value())rkr->MusDelay_Bypass=1;}
    xywh {53 103 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 when 4 minimum 10 maximum 480 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_gain1 {
    label {Gain 1}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(24);
 return;
} 
rkr->efx_MusDelay->changepar(11,(int)o->value());}
    xywh {53 122 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_gain2 {
    label {Gain 2}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(25);
 return;
} 
rkr->efx_MusDelay->changepar(12,(int)o->value());}
    xywh {53 134 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_fb1 {
    label {FB 1}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(83);
 return;
} 
rkr->efx_MusDelay->changepar(5,(int)o->value());}
    tooltip {Feedback 1} xywh {53 146 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_fb2 {
    label {FB 2}
    callback {if(Fl::event_button()==3)
{
 rgui->getMIDIControl(84);
 return;
} 
rkr->efx_MusDelay->changepar(9,(int)o->value());}
    tooltip {Feedback 2} xywh {53 158 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
  Fl_Value_Slider musdelay_damp {
    label Damp
    callback {rkr->efx_MusDelay->changepar(6,(int)o->value());}
    xywh {53 170 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class SliderW
  }
}
