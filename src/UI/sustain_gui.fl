# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include "RKR_Light_Button.h"} {public global
}

decl {\#include "RKR_Choice.h"} {public global
}

decl {\#include "RKR_GUI_Effect.h"} {public global
}

widget_class SustainGui {
  user_data 1 open selected
  xywh {1582 168 155 180} type Double box UP_BOX color 0 selection_color 0 align 112
  code0 {\#include "RKR_Slider.h"}
  code1 {\#include "../process.h"}
  code2 {\#include "rakarrack.h"}
  class RKR_Gui_Effect visible position_relative
} {
  Fl_Light_Button sus_activar {
    label On
    user_data 2
    callback {if(Fl::event_button()==3)
        {
         m_parent->getMIDIControl(MC_Multi_On_Off);
         o->value(m_process->EFX_Bypass[EFX_SUSTAINER]);
         return;
        }
        m_process->EFX_Bypass[EFX_SUSTAINER]=(int)o->value();
        if((int) o->value()==0)
        m_process->Rack_Effects[EFX_SUSTAINER]->cleanup();
        m_parent->findpos(EFX_SUSTAINER,(int)o->value(),o);}
    xywh {5 4 34 18} shortcut 0x31 color 62 selection_color 1 labelsize 10 align 84 when 1
    code0 {activate_effect = o;}
    class RKR_Light_Button
  }
  Fl_Choice sus_preset {
    label Preset
    user_data 12036
    callback {long long ud= (long long) v;
if((ud==0)||(ud==12036))m_process->Rack_Effects[EFX_SUSTAINER]->setpreset((int) o->value());

for (int i = 0; i < m_process->EFX_Param_Size[EFX_SUSTAINER]; i++)
{
    parameter_refresh(i);
};}
    xywh {77 4 76 18} down_box BORDER_BOX selection_color 0 labelsize 10 labelcolor 7 when 6 textsize 10 textcolor 7
    code0 {preset_choice = o;}
    class RKR_Choice
  } {
    MenuItem {} {
      label Moderate
      xywh {30 30 36 21} labelsize 10
    }
    MenuItem {} {
      label Extreme
      xywh {20 20 36 21} labelsize 10
    }
    MenuItem {} {
      label Mild
      xywh {20 20 36 21} labelsize 10
    }
  }
  Fl_Value_Slider sus_gain {
    label Gain
    callback {if(Fl::event_button()==3)
{
 m_parent->getMIDIControl(MC_Sustain_Gain);
 return;
}
m_process->Rack_Effects[EFX_SUSTAINER]->changepar(Sustain_Gain,(int)o->value());}
    xywh {56 60 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 maximum 127 step 1 textcolor 7
    class RKR_Slider
  }
  Fl_Value_Slider sus_sus {
    label Sustain
    callback {if(Fl::event_button()==3)
{
 m_parent->getMIDIControl(MC_Sustain_Sustain);
 return;
}
m_process->Rack_Effects[EFX_SUSTAINER]->changepar(Sustain_Sustain,(int)o->value());}
    xywh {56 86 100 10} type {Horz Knob} box FLAT_BOX color 178 selection_color 62 labelsize 10 labelcolor 7 align 4 minimum 1 maximum 127 step 1 value 32 textcolor 7
    class RKR_Slider
  }
  Function {parameter_refresh(int index)} {open return_type void
  } {
    code {switch (index)
    {
    case Sustain_Gain:
        sus_gain->value(m_process->Rack_Effects[EFX_SUSTAINER]->getpar(Sustain_Gain));
        break;
    case Sustain_Sustain:
        sus_sus->value(m_process->Rack_Effects[EFX_SUSTAINER]->getpar(Sustain_Sustain));
        break;
    }} {}
  }
}
